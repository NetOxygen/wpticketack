{"version":3,"sources":["app/Cart/Cart.js"],"names":["define","dependencies","config","async","$","TKTApi","Template","postal","CartModel","Cart","$container","state","cart","prototype","attach","init","_this","subscribe","channel","topic","callback","data","envelope","load_cart","internal","document","on","e","preventDefault","user_data","firstname","val","lastname","tab","email","checkout","err","rsp","fadeOut","fadeIn","set_user_data","set_open","get_new","_this2","loadCart","status","loadItemsInfos","build_table","emit_update","bind_remove_item_icons","id","set_pending","html","render","program_url","get","cart_reset_url","validate_cart_url","session_id","_this3","$x","target","item_id","parseInt","remove_item","reset_cart","bind","removeFromCart","_this4","tasks","_","map","x","done","parallel","results","setPending","setOpen","_this5","getNew","setUserData","_this6","pay","confirm","publish","detach"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Show a debug bar for the Reader\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"Cart/Cart\"\n * >\n */\ndefine(\n    ['config', 'async', 'jquery', 'api', 'template', 'postal', 'Cart'],\n    function dependencies(config, async, $, TKTApi, Template, postal, CartModel) {\n\n    function Cart($container, state) {\n        this.$container = $container;\n        this.cart       = {};\n    }\n\n    Cart.prototype = {\n        attach: function() {\n            this.init();\n        },\n\n        init: function() {\n            postal.subscribe({\n                channel: \"cart\",\n                topic: \"reload\",\n                callback: (data, envelope) => {\n                    this.load_cart();\n                }\n            });\n            postal.subscribe({\n                channel: \"cart\",\n                topic: \"update\",\n                callback: (data, envelope) => {\n                    if (!data.internal)\n                        this.load_cart();\n                }\n            });\n            $(document).on('click', '.finish-cart-btn', (e) => {\n                e.preventDefault();\n\n                let user_data = {};\n                const firstname = $('#firstname-input', this.$container).val();\n                const lastname  = $('#lastname-input', this.$container).val();\n                const tab       = $('#tab-input', this.$container).val();\n                const email     = $('#email-input', this.$container).val();\n                if (firstname)\n                    user_data.firstname = firstname;\n                if (lastname)\n                    user_data.lastname = lastname;\n                if (tab)\n                    user_data.tab = tab;\n                if (email)\n                    user_data.email = email;\n                this.checkout(user_data, (err, rsp) => {\n                    if (err)\n                        return;\n\n                    this.cart = {};\n                    $('#cart').fadeOut();\n                    $('#checkout-confirm-popup').fadeIn();\n                });\n            });\n\n            $(document).on('click', '.open-cart-btn', (e) => {\n                e.preventDefault();\n\n                $('#cart').fadeOut();\n                let user_data = {};\n                const tab = $('#tab-input', this.$container).val();\n                if (tab)\n                    user_data.tab = tab;\n\n                this.set_user_data(user_data, (err, rsp) => {\n                    if (err)\n                        return;\n                    this.set_open((err, rsp) => {\n                        if (err)\n                            return;\n                        this.get_new((err, rsp) => {\n                            if (err)\n                                return;\n                            $('#checkout-confirm-popup').fadeIn();\n                        });\n                    });\n                });\n            });\n        },\n\n        load_cart: function(callback) {\n            callback = callback || ((err) => {});\n\n            TKTApi.loadCart((err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                this.cart = new CartModel(rsp);\n                this.cart.loadItemsInfos((err) => {\n                    if (err)\n                        return callback(err);\n\n                    this.build_table();\n                    this.emit_update();\n\n                    this.bind_remove_item_icons();\n                    if (this.cart.id) {\n                        this.set_pending((err, rsp) => {\n                            if (err)\n                                return callback(err);\n                        });\n                    } else {\n                        return callback();\n                    }\n                });\n            });\n        },\n\n        build_table: function() {\n            this.$container.html(Template.render('tkt-cart-table-tpl', {\n                cart: this.cart,\n                program_url: config.get('program_url'),\n                cart_reset_url: config.get('cart_reset_url'),\n                validate_cart_url: this.cart.validate_cart_url + '?PHPSESSID=' + TKTApi.session_id\n            }));\n        },\n\n        bind_remove_item_icons: function(callback) {\n            $('.tkt-remove-cart-item').on('click', (e) => {\n                const $x      = $(e.target);\n                const item_id = parseInt($x.data('item'));\n\n                this.remove_item(item_id, (err) => {\n                    if (err)\n                        return callback(err);\n\n                    return this.load_cart(callback);\n                });\n            });\n\n            $('.tkt-reset-cart-btn').on('click', this.reset_cart.bind(this));\n        },\n\n        remove_item: function(item_id, callback) {\n            TKTApi.removeFromCart(item_id, (err, status, rsp) => {\n                return callback(err);\n            });\n        },\n\n        reset_cart: function(e) {\n            e.preventDefault();\n\n            const tasks = _.map($('.tkt-remove-cart-item'), (x) => {\n                return (done) => {\n                    let item_id = parseInt($(x).data('item'));\n                    this.remove_item(item_id, done);\n                };\n            });\n\n            async.parallel(tasks, (err, results) => {\n                return this.load_cart();\n            });\n        },\n\n        set_pending: function(callback) {\n            callback  = callback || ((err) => {});\n\n            TKTApi.setPending(this.cart.id, (err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                return callback(/*err*/null, rsp);\n            });\n        },\n\n        set_open: function(callback) {\n            callback  = callback || ((err) => {});\n\n            TKTApi.setOpen(this.cart.id, (err, status, rsp) => {\n                return callback(err);\n            });\n        },\n\n        get_new: function(callback) {\n            callback  = callback || ((err) => {});\n\n            TKTApi.getNew((err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                return this.load_cart(callback);\n            });\n        },\n\n        set_user_data: function(data, callback) {\n            callback  = callback || ((err) => {});\n\n            TKTApi.setUserData(this.cart.id, data, (err, status, rsp) => {\n                return callback(err);\n            });\n        },\n\n        checkout: function(user_data, callback) {\n            callback  = callback || ((err) => {});\n            user_data = user_data || {};\n\n            TKTApi.pay(this.cart.id, 'POS_CASH', user_data, (err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                TKTApi.confirm(this.cart.id, (err, status, rsp) => {\n                    if (err)\n                        return callback(err);\n\n                    return callback(/*err*/null, rsp);\n                });\n            });\n        },\n\n        emit_update: function() {\n            postal.publish({\n                channel: \"cart\",\n                topic: \"update\",\n                data: {\n                    cart: this.cart,\n                    internal: true\n                }\n            });\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return Cart;\n});\n\n"]}