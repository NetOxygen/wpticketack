{"version":3,"sources":["app/Cart/Cart.js"],"names":["e","a","define","cart","config","async","Template","postal","CartModel","call","attach","Object","prototype","toString","Cart","m","init","subscribe","u","callback","M","t","channel","length","s","push","load_cart","h","c","_this2","va","emit_update","Y","err","_pf","empty","unusedTokens","build_table","unusedInput","$container","overflow","program_url","charsLeftOver","cart_reset_url","nullInput","invalidMonth","invalidFormat","userInvalidated","parsedDateParts","meridiem","item_id","rfc2822","_this3","weekdayMismatch","y","bind_remove_item_icons","n","$x","remove_item","invalidWeekday","TKTApi","removeFromCart","data","bigHour","isFrozen","_isValid","$","NaN","L","results","some","reset_cart","d","preventDefault","k","tasks","o","_isAMomentObject","parseInt","_i","_f","_l","_strict","_tzm","_isUTC","_offset","_locale","_this4","this","_d","Date","getTime","isValid","l","updateOffset","p","T","Math","ceil","floor","detach","isFinite"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Show a debug bar for the Reader\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"Cart/Cart\"\n * >\n */\ndefine(\n    ['config', 'async', 'jquery', 'api', 'template', 'postal', 'Cart'],\n    function dependencies(config, async, $, TKTApi, Template, postal, CartModel) {\n\n    function Cart($container, state) {\n        this.$container = $container;\n        this.cart       = {};\n    }\n\n    Cart.prototype = {\n        attach: function() {\n            this.init();\n        },\n\n        init: function() {\n            this.load_cart((err) => {\n                // FIXME: handle error\n                if (err)\n                    return;\n            });\n            postal.subscribe({\n                channel: \"cart\",\n                topic: \"reload\",\n                callback: (data, envelope) => {\n                    this.load_cart();\n                }\n            });\n        },\n\n        load_cart: function(callback) {\n            callback = callback || ((err) => {});\n\n            TKTApi.loadCart((err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                this.cart = new CartModel(rsp);\n                this.cart.loadItemsInfos((err) => {\n                    if (err)\n                        return callback(err);\n\n                    this.build_table();\n                    this.emit_update();\n\n                    this.bind_remove_item_icons((err) => {\n                        return callback(err);\n                    });\n                });\n            });\n        },\n\n        build_table: function() {\n            this.$container.html(Template.render('tkt-cart-table-tpl', {\n                cart: this.cart,\n                program_url: config.get('program_url'),\n                cart_reset_url: config.get('cart_reset_url'),\n                validate_cart_url: this.cart.validate_cart_url + '?PHPSESSID=' + TKTApi.session_id\n            }));\n        },\n\n        bind_remove_item_icons: function(callback) {\n            $('.tkt-remove-cart-item').on('click', (e) => {\n                const $x      = $(e.target);\n                const item_id = parseInt($x.data('item'));\n\n                this.remove_item(item_id, (err) => {\n                    if (err)\n                        return callback(err);\n\n                    return this.load_cart(callback);\n                });\n            });\n\n            $('.tkt-reset-cart-btn').on('click', this.reset_cart.bind(this));\n        },\n\n        remove_item: function(item_id, callback) {\n            TKTApi.removeFromCart(item_id, (err, status, rsp) => {\n                return callback(err);\n            });\n        },\n\n        reset_cart: function(e) {\n            e.preventDefault();\n\n            const tasks = _.map($('.tkt-remove-cart-item'), (x) => {\n                return (done) => {\n                    let item_id = parseInt($(x).data('item'));\n                    this.remove_item(item_id, done);\n                };\n            });\n\n            async.parallel(tasks, (err, results) => {\n                return this.load_cart();\n            });\n        },\n\n        emit_update: function() {\n            postal.publish({\n                channel: \"cart\",\n                topic: \"update\",\n                data: {\n                    cart: this.cart\n                }\n            });\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return Cart;\n});\n\n"]}