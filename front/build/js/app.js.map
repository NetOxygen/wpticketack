{"version":3,"sources":["app/Program/BookabilityState.js"],"names":["e","a","define","dependencies","arguments","STATE_NOT_SOLD_HERE","STATE_NOT_BOOKABLE","Object","prototype","toString","call","STATE_BOOKABLE","BookabilityState","$container","attach","init","Date","M","items","t","s","_","ids","state","push","$","h","chunks","tasks","seats","occupation_percentage","L","valueOf","STATE_ALMOST_NOT_BOOKABLE","Y","_pf","done","empty","unusedTokens","async","parallel","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","sold_here","meridiem","rfc2822","weekdayMismatch","y","_isValid","n","overflow","invalidWeekday","_strict","length","bigHour","isFrozen","f","c","NaN","Array","some","this","d"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Handle program filters\n *\n * Usage:\n *\n * <[*]\n *    <!-- Required -->\n *    data-component=\"Program/BookabilityState\"\n * >\n *\n *   For each screening/event you want to check the bookability, add:\n *   <[*] data-bookability-ids=\"12345678-1234-1234-1234-123456789012,...\">\n *     <[*] class=\"show-while-loading\"></[*]>\n *     <[*] class=\"show-if-bookable\"></[*]>\n *     <[*] class=\"show-if-almost-not-bookable\"></[*]>\n *     <[*] class=\"show-if-not-bookable\"></[*]>\n *   </[*]>\n *\n * </[*]>\n */\ndefine(\n    ['jquery', 'lodash', 'async', 'api'],\n    function dependencies($, _, async, TKTApi) {\n\n    const MIN_SEATS_OCCUPATION = 90;\n\n    const STATE_NOT_SOLD_HERE       = 0;\n    const STATE_NOT_BOOKABLE        = 1;\n    const STATE_ALMOST_NOT_BOOKABLE = 2;\n    const STATE_BOOKABLE            = 3;\n\n    function BookabilityState($container, state) {\n        this.$container = $container;\n\n        this.$container\n            .addClass('tkt-bookability-state-wrapper')\n            .addClass('loading-bookability-state');\n    }\n\n    BookabilityState.prototype = {\n        attach: function() {\n            this.init();\n        },\n\n        init: function() {\n            const items = $('[data-bookability-ids]', this.$container);\n\n            if (!items)\n                return;\n\n            const ids = _.uniq(_.flatten(_.map(items, (i) => {\n                return $(i).attr('data-bookability-ids').split(',');\n            })));\n\n            let map = {};\n\n            const chunks = _.chunk(ids, 150);\n            const tasks  = _.map(chunks, (ids) => {\n                return (done) => {\n                    TKTApi.getScreeningsInfo(ids, (err, status, rsp) => {\n                        if (err)\n                            return done(err);\n\n                        _.each(rsp, (s) => {\n                            map[s._id] = {\n                                seats: s.seats,\n                                sold_here: _.keys(s.pricings).length > 0 || s.eligible_types.length > 0\n                            }\n                        });\n\n                        return done(/*err*/null);\n                    });\n                };\n            });\n\n            async.parallel(tasks, (err, results) => {\n                if (err)\n                    return err;\n\n                _.each(items, (i) => {\n                    let ids = $(i).attr('data-bookability-ids').split(',');\n                    let state = _.max(_.map(ids, (i) => {\n                        let seats     = map[i]['seats'];\n                        let sold_here = map[i]['sold_here'];\n                        if (!sold_here)\n                            return STATE_NOT_SOLD_HERE;\n                        if (seats.available == 0)\n                            return STATE_NOT_BOOKABLE;\n                        if (seats.occupation_percentage >= MIN_SEATS_OCCUPATION)\n                            return STATE_ALMOST_NOT_BOOKABLE;\n                        return STATE_BOOKABLE;\n                    }));\n\n                    switch (state) {\n                        case STATE_NOT_SOLD_HERE:\n                            return;\n                        case STATE_NOT_BOOKABLE:\n                            return $(i).addClass('not-bookable');\n                        case STATE_ALMOST_NOT_BOOKABLE:\n                            return $(i).addClass('almost-not-bookable');\n                        case STATE_BOOKABLE:\n                            return $(i).addClass('bookable');\n                    }\n                });\n\n                this.$container\n                    .removeClass('loading-bookability-state')\n                    .addClass('loaded-bookability-state');\n\n                $('.show-if-bookable,.show-if-almost-not-bookable,.show-if-not-bookable', this.$container).removeClass('d-none');\n            });\n        },\n\n        detach: function() {\n\n        }\n    };\n \n    return BookabilityState;\n});\n"]}