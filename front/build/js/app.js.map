{"version":3,"sources":["app/Program/BookabilityState.js"],"names":["e","a","define","dependencies","arguments","STATE_NOT_SOLD_HERE","STATE_NOT_BOOKABLE","Object","prototype","toString","call","STATE_BOOKABLE","BookabilityState","$container","attach","init","Date","M","items","t","s","_","ids","state","max","push","$","h","chunks","tasks","seats","occupation_percentage","L","addClass","STATE_ALMOST_NOT_BOOKABLE","_pf","done","empty","unusedTokens","detach","parallel","charsLeftOver","nullInput","invalidMonth","iso","parsedDateParts","sold_here","meridiem","rfc2822","weekdayMismatch","y","_isValid","Y","overflow","invalidWeekday","invalidFormat","userInvalidated","_strict","length","bigHour","isFrozen","f","c","NaN","n","Array","some","this"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Handle program filters\n *\n * Usage:\n *\n * <[*]\n *    <!-- Required -->\n *    data-component=\"Program/BookabilityState\"\n * >\n *\n *   For each screening/event you want to check the bookability, add:\n *   <[*] data-bookability-ids=\"12345678-1234-1234-1234-123456789012,...\">\n *     <[*] class=\"show-while-loading\"></[*]>\n *     <[*] class=\"show-if-bookable\"></[*]>\n *     <[*] class=\"show-if-almost-not-bookable\"></[*]>\n *     <[*] class=\"show-if-not-bookable\"></[*]>\n *   </[*]>\n *\n * </[*]>\n */\ndefine(\n    ['jquery', 'lodash', 'async', 'api'],\n    function dependencies($, _, async, TKTApi) {\n\n    const MIN_SEATS_OCCUPATION = 90;\n\n    const STATE_NOT_SOLD_HERE       = 0;\n    const STATE_NOT_BOOKABLE        = 1;\n    const STATE_ALMOST_NOT_BOOKABLE = 2;\n    const STATE_BOOKABLE            = 3;\n\n    function BookabilityState($container, state) {\n        this.$container = $container;\n\n        this.$container\n            .addClass('tkt-bookability-state-wrapper')\n            .addClass('loading-bookability-state');\n    }\n\n    BookabilityState.prototype = {\n        attach: function() {\n            this.init();\n        },\n\n        init: function() {\n            const items = $('[data-bookability-ids]', this.$container);\n\n            if (!items)\n                return;\n\n            const ids = _.compact(_.uniq(_.flatten(_.map(items, (i) => {\n                return $(i).attr('data-bookability-ids').split(',');\n            }))));\n\n            let map = {};\n\n            const chunks = _.chunk(ids, 150);\n            const tasks  = _.map(chunks, (ids) => {\n                return (done) => {\n                    TKTApi.getScreeningsInfo(ids, (err, status, rsp) => {\n                        if (err)\n                            return done(err);\n\n                        _.each(rsp, (s) => {\n                            map[s._id] = {\n                                seats: s.seats,\n                                sold_here: _.keys(s.pricings).length > 0 || s.eligible_types.length > 0\n                            }\n                        });\n\n                        return done(/*err*/null);\n                    });\n                };\n            });\n\n            async.parallel(tasks, (err, results) => {\n                if (err)\n                    return err;\n\n                _.each(items, (i) => {\n                    let ids = $(i).attr('data-bookability-ids').split(',');\n                    let state = _.max(_.map(ids, (i) => {\n                        let seats     = map[i] ? map[i]['seats'] : 0;\n                        let sold_here = map[i] ? map[i]['sold_here'] : false;\n                        if (!sold_here)\n                            return STATE_NOT_SOLD_HERE;\n                        if (seats.available == 0)\n                            return STATE_NOT_BOOKABLE;\n                        if (seats.occupation_percentage >= MIN_SEATS_OCCUPATION)\n                            return STATE_ALMOST_NOT_BOOKABLE;\n                        return STATE_BOOKABLE;\n                    }));\n\n                    switch (state) {\n                        case STATE_NOT_SOLD_HERE:\n                            return $(i).addClass('not-sold-here');\n                        case STATE_NOT_BOOKABLE:\n                            return $(i).addClass('not-bookable');\n                        case STATE_ALMOST_NOT_BOOKABLE:\n                            return $(i).addClass('almost-not-bookable');\n                        case STATE_BOOKABLE:\n                            return $(i).addClass('bookable');\n                    }\n                });\n\n                this.$container\n                    .removeClass('loading-bookability-state')\n                    .addClass('loaded-bookability-state');\n            });\n        },\n\n        detach: function() {\n\n        }\n    };\n \n    return BookabilityState;\n});\n"]}