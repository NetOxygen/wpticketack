{"version":3,"sources":["app/Cart/Cart.js"],"names":["e","a","define","cart","config","async","Template","postal","CartModel","call","attach","Object","prototype","toString","Cart","load_cart","u","Date","_this","loadItemsInfos","callback","h","bind_remove_item_icons","L","t","$container","valueOf","c","cart_reset_url","va","s","Y","build_table","item_id","unusedInput","_this2","overflow","charsLeftOver","program_url","nullInput","invalidMonth","parseInt","iso","remove_item","removeFromCart","_pf","y","n","parsedDateParts","$","unusedTokens","length","bigHour","isFrozen","TKTApi","_isValid","f","preventDefault","tasks","map","_","userInvalidated","Array","_this3","this","d","l","emit_update","_isAMomentObject","o","_i","_f","_l","_strict","_tzm","_isUTC","_offset","_locale","channel","topic","detach","k"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Show a debug bar for the Reader\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"Cart/Cart\"\n * >\n */\ndefine(\n    ['config', 'async', 'jquery', 'api', 'template', 'postal', 'Cart'],\n    function dependencies(config, async, $, TKTApi, Template, postal, CartModel) {\n\n    function Cart($container, state) {\n        this.$container = $container;\n        this.cart       = {};\n    }\n\n    Cart.prototype = {\n        attach: function() {\n            this.init();\n        },\n\n        init: function() {\n            this.load_cart((err) => {\n                // FIXME: handle error\n                if (err)\n                    return;\n            });\n        },\n\n        load_cart: function(callback) {\n            callback = callback || ((err) => {});\n\n            TKTApi.loadCart((err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                this.cart = new CartModel(rsp);\n                this.cart.loadItemsInfos((err) => {\n                    if (err)\n                        return callback(err);\n\n                    this.build_table();\n                    this.emit_update();\n\n                    this.bind_remove_item_icons((err) => {\n                        return callback(err);\n                    });\n                });\n            });\n        },\n\n        build_table: function() {\n            this.$container.html(Template.render('tkt-cart-table-tpl', {\n                cart: this.cart,\n                program_url: config.get('program_url'),\n                cart_reset_url: config.get('cart_reset_url')\n            }));\n        },\n\n        bind_remove_item_icons: function(callback) {\n            $('.tkt-remove-cart-item').on('click', (e) => {\n                const $x      = $(e.target);\n                const item_id = parseInt($x.data('item'));\n\n                this.remove_item(item_id, (err) => {\n                    if (err)\n                        return callback(err);\n\n                    return this.load_cart(callback);\n                });\n            });\n\n            $('.tkt-reset-cart-btn').on('click', this.reset_cart.bind(this));\n        },\n\n        remove_item: function(item_id, callback) {\n            TKTApi.removeFromCart(item_id, (err, status, rsp) => {\n                return callback(err);\n            });\n        },\n\n        reset_cart: function(e) {\n            e.preventDefault();\n\n            const tasks = _.map($('.tkt-remove-cart-item'), (x) => {\n                return (done) => {\n                    let item_id = parseInt($(x).data('item'));\n                    this.remove_item(item_id, done);\n                };\n            });\n\n            async.parallel(tasks, (err, results) => {\n                return this.load_cart();\n            });\n        },\n\n        emit_update: function() {\n            postal.publish({\n                channel: \"cart\",\n                topic: \"update\",\n                data: {\n                    cart: this.cart\n                }\n            });\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return Cart;\n});\n\n"]}