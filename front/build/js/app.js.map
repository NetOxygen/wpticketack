{"version":3,"sources":["app/Media/YoutubeVideo.js"],"names":["e","a","define","dependencies","YoutubeVideo","loadPlayer","player","video_id","channel","$container","Object","prototype","toString","call","carousel_id","autoplay","_this","showinfo","onYouTubeIframeAPIReady","attach","init","M","$video_container","t","s","window","push","h","postal","L","_this2","console","YT","videoId","valueOf","c","_pf","onStateChange","unusedInput","$frame","overflow","$video_image","$play_btn","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","weekdayMismatch","publish","y","isNaN","_d","getTime","empty","invalidWeekday","nullInput","_isValid","f","events","playerVars","Y","n","Array","controls","some","modestbranding","rel","d","l","momentProperties","k","o","_isAMomentObject","$","attr","_i","_f","addClass","_l","appendTo","_strict","_tzm","_isUTC","_offset","_locale","length","p","this","Date","NaN","isValid","updateOffset","detach","Math"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Play a Youtube video inside an iframe.\n * It loads and uses the Youtube Iframe API\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"Media/YoutubeVideo\"\n *    data-video-id=\"[VIDEO ID]\"\n *\n *    <!-- Optional -->\n *    data-video-image=\"[IMAGE URL]\"\n *    data-bs4-carousel-id=\"[CAROUSEL ID]\"\n *    data-autoplay=\"1|0\"                   <!-- default: 0 -->\n *    data-controls=\"1|0\"                   <!-- default: 0 -->\n *    data-showinfo=\"1|0\"                   <!-- default: 0 -->\n * >\n *\n * If the video is embedded in a Bootstrap 4 carousel, set the\n * data-bs4-carousel-id to pause the carousel while the video is played\n * and to stop the video if the user slides while paying it.\n */\ndefine(\n    ['postal', 'jquery', 'bootstrap'],\n    function dependencies(postal, $) {\n\n    function YoutubeVideo($container, state) {\n        this.$container = $container;\n        this.player     = null;\n\n        this.video_id    = this.$container.data('video-id');\n        this.video_image = this.$container.data('video-image');\n        this.carousel_id = this.$container.data('bs4-carousel-id');\n\n        this.autoplay    = this.$container.data('autoplay') || \"0\";\n        this.controls    = this.$container.data('controls') || \"0\";\n        this.showinfo    = this.$container.data('showinfo') || \"0\";\n    }\n\n    YoutubeVideo.prototype = {\n        attach: function() {\n            this.init();\n        },\n\n        init: function() {\n            this.$container.addClass('yt-video-container');\n            this.$video_container = $('<div></div>')\n                .attr('id', 'yt-video-' + this.video_id + '-' + new Date().getTime())\n                .appendTo(this.$container);\n\n            if (typeof(YT) == 'undefined' || typeof(YT.Player) == 'undefined') {\n                // Set Youtube callback\n                window.onYouTubeIframeAPIReady = this.onYouTubeIframeAPIReady.bind(this),\n                // Load API script\n                $.getScript('//www.youtube.com/iframe_api');\n            } else {\n                this.loadPlayer();\n            }\n\n            if (this.carousel_id) {\n                // Subscribe on the caousel slide events to stop the video when needed.\n                postal.subscribe({\n                    channel: \"carousel-\" + this.carousel_id,\n                    topic: \"slide\",\n                    callback: (data, envelope) => {\n                        console.log('Video received slide instruction');\n                        this.player.stopVideo();\n                    }\n                });\n            }\n        },\n\n        onYouTubeIframeAPIReady: function() {\n            this.loadPlayer();\n        },\n\n        onStateChange: function(e) {\n            // Inform the BS4 carousel of video state changes, so as to\n            // pause or resume the slide when needed.\n            if (this.carousel_id) {\n                switch (e.data) {\n                    case YT.PlayerState.BUFFERING:\n                    case YT.PlayerState.PLAYING:\n                        postal.publish({\n                            channel: \"carousel-\" + this.carousel_id,\n                            topic: \"action\",\n                            data: { action: 'pause' }\n                        });\n                        break;\n                    case YT.PlayerState.ENDED:\n                        postal.publish({\n                            channel: \"carousel-\" + this.carousel_id,\n                            topic: \"action\",\n                            data: { action: 'cycle' }\n                        });\n                        break;\n                }\n            }\n        },\n\n        loadPlayer: function() {\n            this.player = new YT.Player(this.$video_container.attr('id'), {\n                videoId: this.video_id,\n                width: this.$container.width(),\n\n                // see https://stackoverflow.com/a/47724503\n                host: 'https://www.youtube.com',\n\n                events: {\n                    onStateChange: this.onStateChange.bind(this)\n                },\n                // For a list of all parameters, see:\n                // https://developers.google.com/youtube/player_parameters\n                playerVars: {\n                    autoplay: this.autoplay,\n                    controls: this.controls,\n                    showinfo: this.showinfo,\n                    modestbranding: 1,\n                    rel: 0,\n                }\n            });\n\n            if (this.video_image) {\n                const $frame = $('iframe', this.$container);\n                $frame.hide();\n\n                this.$video_image = $('<img />')\n                    .attr('src', this.video_image)\n                    .attr('style', 'max-width: 924px')\n                    .addClass('yt-video-image')\n                    .appendTo(this.$container);\n\n                this.$play_btn = $('<div></div>')\n                    .addClass('yt-video-play-image')\n                    .appendTo(this.$container);\n\n                this.$play_btn.click((e) => {\n                    this.player.playVideo();\n                    this.$video_image.addClass('hidden');\n                    this.$play_btn.addClass('hidden');\n                    $frame.show();\n                });\n            }\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return YoutubeVideo;\n});\n"]}