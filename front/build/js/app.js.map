{"version":3,"sources":["app/Booking/Form.js"],"names":["e","a","define","Form","prototype","$container","ids","postal","parseInt","toString","call","getUrlParam","_this","M","t","s","init_store","subscribe","push","channel","init","TKTApi","hasOwnProperty","L","rsp","h","_this2","valueOf","c","va","screening","Y","_pf","empty","unusedTokens","unusedInput","overflow","pricings","charsLeftOver","pass_infos","nullInput","reset_store_on_screening_change","screenings","emit_cart_update","publish","cart","topic","_d","getTime","data","bookability","emit_connection_update","process_add_to_cart","userInvalidated","n","Array","some","Object","this","length","i18n","d","l","momentProperties","k","_this3","book","p","Date","NaN","isValid","updateOffset","D","_isAMomentObject","T","Math","$","html","g","loginTicket","err","number","_this5","r","check_bookability","_this6","console","warn","deprecationHandler","flash","removeClass","arguments","slice","_this4","build_form","v","build_dates_form","click","$date","b","i","s_to_select","j","d_to_select","select_day","suppressDeprecationWarnings","keys","x","P","$input","msg","toLowerCase","W","val","A","F","_this8","preventDefault","max","substr","z","J","N","R","closest","_this7","select_screening","localeData","ordinal","apply","build_success_panel","G","activate_day","match","replace","H","data_screening_id","invalidDate","build_tickets_form","lastIndex","activate_screening","screening_id","U","V","Z","B","q","Q","X","ee","ae","te","se","ne","de","re","_e","ie","$t","url","window","location","me","ue","le","m","$qty","text","_w","target","he","Le","ce","Ye","ye","De","Te","ge","I","year","program_url","parseTwoDigitYear","$day_input","first_screening","He","_","_isUTC","month","date","je","name","regex","RegExp","results","we","indexOf","decodeURIComponent","detach"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Show a booking form\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"Booking/Form\"\n *    data-ids=\"12345678-1234-1234-1234-123456789012,...\"\n * >\n */\ndefine( [\n        'config', 'i18n', 'postal', 'lodash',\n        'template', 'jquery', 'api',\n        'moment', 'Cart', 'Screening', 'Ticket'\n    ], function dependencies(\n        config, i18n, postal, _,\n        Template, $, TKTApi,\n        moment, CartModel, Screening, Ticket) {\n\n    function Form($container, state) {\n        this.$container  = $container;\n        this.initialized = false;\n\n        this.ids                = this.$container.data('ids').split(',');\n        this.show_on_load       = parseInt(this.getUrlParam('book')) == 1;\n        this.selected_screening = this.getUrlParam('s_id');\n    }\n\n    Form.prototype = {\n        attach: function() {\n            this.init_store();\n\n            postal.subscribe({\n                channel: \"connection\",\n                topic: \"update\",\n                callback: (data, envelope) => {\n                    this.check_bookability();\n                }\n            });\n\n            this.init();\n        },\n\n        init: function() {\n            TKTApi.getScreeningsInfo(this.ids, (err, status, rsp) => {\n                this.data.screenings = rsp.map((s) => {\n                    let screening = new Screening(s);\n                    screening.eligible_types = s.eligible_types;\n\n                    return screening;\n                });\n                this.data.screenings = _.sortBy(this.data.screenings, (s) => s.start_at);\n                this.build_form();\n                this.initialized = true;\n            });\n        },\n\n        init_store: function() {\n            this.data = {\n                screenings: [], // current screenings\n                screening: {},  // selected screening\n                pricings: [],   // selected screening pricings\n                pass_infos: {}, // connection infos\n                ticket: {},     // active ticket\n                bookability: {} //selected screening bookability with  active ticket\n            };\n        },\n\n        reset_store_on_screening_change: function() {\n            this.data.screening   = {};\n            this.data.pricings    = {};\n            this.data.pass_infos  = {};\n            this.data.bookability = {};\n        },\n\n        deinit: function() {\n            this.$container.html(\"\");\n            this.initialized = false;\n        },\n\n        emit_cart_update: function(cart) {\n            postal.publish({\n                channel: \"cart\",\n                topic: \"update\",\n                data: {\n                    cart: cart\n                }\n            });\n        },\n\n        emit_connection_update: function(ticket) {\n            postal.publish({\n                channel: \"connection\",\n                topic: \"update\",\n                data: {\n                    ticket: ticket\n                }\n            });\n        },\n\n        process_add_to_cart: function() {\n            $('.pricings-error').html(\"\").addClass('d-none');\n            $('.success-panel').addClass('d-none');\n\n            // Check chosen pricings\n            const chosen_pricings = _.find(this.data.pricings, (nb) => nb > 0);\n            if (!chosen_pricings) {\n                return $('.pricings-error')\n                    .html(i18n.t('Veuillez choisir au moins un billet'))\n                    .removeClass('d-none');\n            }\n\n            // Add to cart\n            TKTApi.addToCart(\n                this.data.screening._id,\n                this.data.pricings,\n                (err, status, rsp) => {\n                    if (err) {\n                        return $('.pricings-error')\n                            .html(rsp.errorMsg)\n                            .removeClass('d-none');\n                    }\n\n                // Hide forms and show success message\n                $('.dates-form, .tickets-form').addClass('d-none');\n                $('.success-panel').removeClass('d-none');\n\n                // Reload and emit cart update\n                TKTApi.loadCart((err, status, rsp) => {\n                    if (err)\n                        return;\n\n                    this.emit_cart_update(new CartModel(rsp));\n                });\n            });\n        },\n\n        book: function() {\n            if (!this.data.screening._id)\n                return new Error(\"No screening\");\n\n            TKTApi.book(this.data.screening._id, (err, status, rsp) => {\n                if (err) {\n                    $('.book-form-success', this.$container).addClass('d-none');\n                    $('.book-form-error', this.$container)\n                        .html(i18n.t(\"Une erreur est survenue. Veuillez ré-essayer ultérieurement.\"))\n                        .removeClass('d-none');\n                } else if (rsp.flash && rsp.flash.error) {\n                    $('.book-form-success', this.$container).addClass('d-none');\n                    $('.book-form-error', this.$container)\n                        .html(rsp.flash.error)\n                        .removeClass('d-none');\n                } else {\n                    $('.book-form-error', this.$container).addClass('d-none');\n                    $('.book-form-success', this.$container)\n                        .html(rsp.flash.success)\n                        .removeClass('d-none');\n                }\n\n                this.check_bookability();\n            });\n        },\n\n        connect_pass: function() {\n            $('.pass-error', this.$container).html(\"\").addClass('d-none');\n\n            if (!this.data.pass_infos.number || !this.data.pass_infos.key)\n                return $('.pass-error')\n                    .html(i18n.t('Veuillez remplir les deux champs'))\n                    .removeClass('d-none');\n\n            TKTApi.loginTicket(\n                this.data.pass_infos.number,\n                this.data.pass_infos.key,\n                (err, status, rsp) => {\n                    if (err)\n                        return $('.pass-error')\n                            .html(i18n.t('Les informations que vous avez saisies sont invalides'))\n                            .removeClass('d-none');\n\n                    this.data.ticket = new Ticket(rsp);\n                    this.emit_connection_update(this.data.ticket);\n\n                    // Redirect to ticket activation if needed\n                    if (this.data.ticket.status == \"new\")\n                        window.location.href =  TKTApi.getTicketViewUrl();\n                }\n            );\n        },\n\n        check_bookability: function(callback) {\n            if (!this.data.screening._id)\n                return new Error(\"No screening\");\n\n            TKTApi.checkBookability(this.data.screening._id, (err, status, rsp) => {\n                if (err)\n                    return false;\n\n                this.data.bookability = rsp;\n\n                if (this.data.bookability.ticket_logged_in) {\n                    $('.connect-panel', this.$container).addClass('d-none');\n                    $('.book-panel', this.$container).removeClass('d-none');\n                    $('.show-bookings-btn', this.$container).removeClass('d-none');\n\n                    if (this.data.bookability.ticket_can_book_screening) {\n                        $('.book-btn', this.$container).removeClass('d-none');\n                        $('.book-form-error', this.$container).addClass('d-none');\n                    } else {\n                        $('.book-btn', this.$container).addClass('d-none');\n                        const msg = this.data.bookability.screening_already_booked ?\n                            i18n.t(\"Vous ne pouvez pas réserver plus de place pour cette séance avec votre abonnement.\") :\n                            i18n.t(\"Vous ne pouvez pas réserver de place pour cette séance avec votre abonnement.\");\n                        $('.book-form-error', this.$container)\n                            .html(msg)\n                            .removeClass('d-none');\n                    }\n                } else {\n                    $('.connect-panel', this.$container).removeClass('d-none');\n                    $('.book-panel', this.$container).addClass('d-none');\n                }\n            });\n        },\n\n        build_form: function() {\n            this.$container.html(\"\");\n            this.$dates_form    = $('<div class=\"dates-form\"></div>').appendTo(this.$container);\n            this.$tickets_form  = $('<div class=\"tickets-form\"></div>').appendTo(this.$container);\n            this.$success_panel = $('<div class=\"success-panel d-none\"></div>').appendTo(this.$container);\n\n            this.build_dates_form();\n            this.build_success_panel();\n        },\n\n        build_dates_form: function() {\n            // render template\n            this.$dates_form.html(Template.render('tkt-booking-form-dates-tpl', {\n                screenings: this.data.screenings,\n            }));\n\n            // bind dates choices\n            $('.dates-wrapper .date').click((e) => {\n                let $date = $(e.target);;\n                if (!$date.data('screening_id'))\n                    $date = $date.closest('[data-screening_id]');\n                this.select_screening($date.data('screening_id'));\n            });\n\n            if ($('.days-wrapper')) {\n                $('.days-wrapper .day').click((e) => {\n                    this.select_day($(e.target).data('day'));\n                });\n            }\n\n            // Select first non full date\n            let s_to_select = this.selected_screening;\n            if (!s_to_select) {\n                let i = this.data.screenings.length - 1;\n                while (i >= 0) {\n                    if (this.data.screenings[i].seats.available > 0)\n                        s_to_select = this.data.screenings[i]._id;\n                    i--;\n                }\n            }\n\n            let d_to_select = $(\n                '.days-wrapper .day[data-screening_id*=\"' + s_to_select + '\"]'\n            ).data('day');\n            this.select_day(d_to_select);\n            this.select_screening(s_to_select);\n        },\n\n        build_tickets_form: function() {\n            // render template\n            const ticket_view_url = TKTApi.getTicketViewUrl();\n            this.$tickets_form.html(Template.render('tkt-booking-form-pricings-tpl', {\n                screening: this.data.screening,\n                ticket_view_url\n            }));\n\n            // bind pricings minus buttons if any\n            $('.tkt-minus-btn', this.$container).click((e) => {\n                const $t     = $(e.target);\n                const $input = $t.parent().next('.pricing-input').eq(0);\n                const val    = parseInt($input.val());\n                if (val > 0) {\n                    $input.val(val - 1).trigger('change');\n                    const $qty = $t.parent().find('.pricing-qty').eq(0);\n                    $qty.text(val - 1);\n                }\n                if (val > 1)\n                    $t.removeClass('tkt-grey-badge').addClass('tkt-dark-badge');\n                else\n                    $t.removeClass('tkt-dark-badge').addClass('tkt-grey-badge');\n            });\n            // bind pricings plus buttons if any\n            $('.tkt-plus-btn', this.$container).click((e) => {\n                const $t     = $(e.target);\n                const $input = $t.parent().next('.pricing-input').eq(0);\n                const val    = parseInt($input.val());\n                $input.val(val + 1).trigger('change');\n                const $qty = $t.parent().find('.pricing-qty').eq(0);\n                $qty.text(val + 1);\n                $('.tkt-minus-btn', $t.parent())\n                    .removeClass('tkt-grey-badge')\n                    .addClass('tkt-dark-badge');\n            });\n            // bind pricing fields\n            $('.pricing-input', this.$container).change((e) => {\n              const $input = $(e.target);\n              this.data.pricings[$input.data('pricing')] = parseInt($input.val());\n            });\n\n            // bind pass panel toggler\n            $('a.show-connect-panel-form', this.$container).click((e) => {\n                e.preventDefault();\n                $('.connect-panel-form').removeClass('d-none');\n            });\n\n            // bind pass fields\n            $('.pass-number-input,.pass-key-input', this.$container).change((e) => {\n              this.data.pass_infos = {\n                number: $('.pass-number-input', this.$container).val(),\n                key: $('.pass-key-input', this.$container).val()\n              };\n            });\n\n            // bind pass connect button\n            $('.connect-btn', this.$container).click(this.connect_pass.bind(this));\n\n            // bind book button\n            $('.book-btn').click(this.book.bind(this));\n\n            // bind add-to-cart button\n            $('.add-to-cart-btn').click((e) => {\n              this.process_add_to_cart();\n            });\n        },\n\n        build_success_panel: function() {\n            // render template\n            this.$success_panel.html(Template.render('tkt-booking-form-success-tpl', {\n                program_url: config.get('program_url'),\n                cart_url: config.get('cart_url')\n            }));\n        },\n\n        activate_day: function (day) {\n            $('.days-wrapper .day').removeClass('active');\n            $('.days-wrapper .day[data-day*=\"' + day + '\"]').addClass('active');\n\n            $('.dates-wrapper .date').hide();\n            $('.dates-wrapper .date[data-day=\"' + day + '\"]').show();\n        },\n\n        select_day: function (day) {\n            this.activate_day(day);\n\n            const $day_input = $('.days-wrapper .day[data-day*=\"' + day + '\"]');\n            const data_screening_id = $day_input.data('screening_id');\n            if (data_screening_id) {\n                const first_screening = data_screening_id.split(',')[0];\n                this.select_screening(first_screening);\n            }\n        },\n\n        activate_screening: function (screening_id) {\n            $('.dates-wrapper .date').removeClass('active');\n            $('.dates-wrapper .date[data-screening_id=\"' + screening_id + '\"]').addClass('active');\n        },\n\n        select_screening: function (screening_id) {\n            this.activate_screening(screening_id);\n\n            // reset data\n            this.reset_store_on_screening_change();\n\n            this.data.screening = _.find(this.data.screenings, (s) => s._id === screening_id );\n            this.build_tickets_form();\n\n            this.check_bookability();\n        },\n\n        getUrlParam(name) {\n            const url = window.location.href;\n            name = name.replace(/[\\[\\]]/g, '\\\\$&');\n            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n                results = regex.exec(url);\n            if (!results) return null;\n            if (!results[2]) return '';\n            return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return Form;\n});\n"]}