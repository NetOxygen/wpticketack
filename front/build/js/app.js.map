{"version":3,"sources":["app/Cart/Cart.js"],"names":["e","a","define","cart","config","async","Template","postal","CartModel","call","attach","Object","prototype","toString","Cart","m","init","callback","u","M","t","s","channel","topic","load_cart","push","h","hasOwnProperty","L","preventDefault","c","va","user_data","utc","Y","email","_pf","$","empty","unusedTokens","_this","overflow","lastname","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","document","parsedDateParts","rfc2822","tab","weekdayMismatch","fadeOut","_d","getTime","invalidWeekday","meridiem","_strict","length","bigHour","isFrozen","_isValid","f","NaN","rsp","Array","some","this","d","l","k","TKT_SET_CARTS_PENDING","set_pending","TKTApi","err","_this2","loadItemsInfos","isValid","Date","updateOffset","D","$container","_isAMomentObject","T","_this3","window","g","isFinite","r","n","Math","min","abs","remove_item","console","warn","cart_reset_url","reset_cart","deprecationHandler","bind_remove_item_icons","arguments","parseInt","data","item_id","$x","_this4","results","slice","join","Error","stack","apply","v","S","set_open","w","get_new","tasks","_this5","done","set","suppressDeprecationWarnings","x","P","toLowerCase","W","emit_update","E","F","detach","set_user_data","pow","max","substr","z","J","N","R","I","checkout","_this6","ordinal","C","status","match","replace","H","publish","localeData","invalidDate","G","longDateFormat","test","lastIndex"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Show a debug bar for the Reader\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"Cart/Cart\"\n * >\n */\ndefine(\n    ['config', 'async', 'jquery', 'api', 'template', 'postal', 'Cart'],\n    function dependencies(config, async, $, TKTApi, Template, postal, CartModel) {\n\n    function Cart($container, state) {\n        this.$container = $container;\n        this.cart       = {};\n    }\n\n    Cart.prototype = {\n        attach: function() {\n            this.init();\n        },\n\n        init: function() {\n            this.load_cart();\n            postal.subscribe({\n                channel: \"cart\",\n                topic: \"reload\",\n                callback: (data, envelope) => {\n                    this.load_cart();\n                }\n            });\n            postal.subscribe({\n                channel: \"cart\",\n                topic: \"update\",\n                callback: (data, envelope) => {\n                    if (!data.internal)\n                        this.load_cart();\n                }\n            });\n\n            /* we bind automatic checkout on .finish-cart-btn links */\n            $(document).on('click', '.finish-cart-btn', (e) => {\n                e.preventDefault();\n\n                let user_data = {};\n                const firstname = $('#firstname-input', this.$container).val();\n                const lastname  = $('#lastname-input', this.$container).val();\n                const tab       = $('#tab-input', this.$container).val();\n                const email     = $('#email-input', this.$container).val();\n                if (firstname)\n                    user_data.firstname = firstname;\n                if (lastname)\n                    user_data.lastname = lastname;\n                if (tab)\n                    user_data.tab = tab;\n                if (email)\n                    user_data.email = email;\n                this.checkout(user_data, (err, rsp) => {\n                    if (err)\n                        return;\n\n                    this.cart = {};\n                    $('#cart').fadeOut();\n                    $('#checkout-confirm-popup').fadeIn();\n                });\n            });\n\n            /* .open-cart-btn is only used for now on Fabrica */\n            $(document).on('click', '.open-cart-btn', (e) => {\n                e.preventDefault();\n\n                $('#cart').fadeOut();\n                let user_data = {};\n                const tab = $('#tab-input', this.$container).val();\n                if (tab)\n                    user_data.tab = tab;\n\n                this.set_user_data(user_data, (err, rsp) => {\n                    if (err)\n                        return;\n                    this.set_open((err, rsp) => {\n                        if (err)\n                            return;\n                        this.get_new((err, rsp) => {\n                            if (err)\n                                return;\n                            $('#checkout-confirm-popup').fadeIn();\n                        });\n                    });\n                });\n            });\n        },\n\n        load_cart: function(callback) {\n            callback = callback || ((err) => {});\n\n            TKTApi.loadCart((err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                this.cart = new CartModel(rsp);\n                this.cart.loadItemsInfos((err) => {\n                    if (err)\n                        return callback(err);\n\n                    this.build_table();\n                    this.emit_update();\n\n                    this.bind_remove_item_icons();\n\n                    /* for fabrica, we need to set the carts as pending until\n                     * the customer has finished his order...\n                     */\n                    if (window.TKT_SET_CARTS_PENDING && this.cart.id) {\n                        this.set_pending((err, rsp) => {\n                            if (err)\n                                return callback(err);\n                        });\n                    } else {\n                        return callback();\n                    }\n                });\n            });\n        },\n\n        build_table: function() {\n            this.$container.html(Template.render('tkt-cart-table-tpl', {\n                cart: this.cart,\n                program_url: config.get('program_url'),\n                cart_reset_url: config.get('cart_reset_url'),\n                validate_cart_url: this.cart.validate_cart_url + '?PHPSESSID=' + TKTApi.session_id\n            }));\n        },\n\n        bind_remove_item_icons: function(callback) {\n            $('.tkt-remove-cart-item').on('click', (e) => {\n                const $x      = $(e.target);\n                const item_id = parseInt($x.data('item'));\n\n                this.remove_item(item_id, (err) => {\n                    if (err)\n                        return callback(err);\n\n                    return this.load_cart(callback);\n                });\n            });\n\n            $('.tkt-reset-cart-btn').on('click', this.reset_cart.bind(this));\n        },\n\n        remove_item: function(item_id, callback) {\n            TKTApi.removeFromCart(item_id, (err, status, rsp) => {\n                return callback(err);\n            });\n        },\n\n        reset_cart: function(e) {\n            e.preventDefault();\n\n            const tasks = _.map($('.tkt-remove-cart-item'), (x) => {\n                return (done) => {\n                    let item_id = parseInt($(x).data('item'));\n                    this.remove_item(item_id, done);\n                };\n            });\n\n            async.parallel(tasks, (err, results) => {\n                return this.load_cart();\n            });\n        },\n\n        set_pending: function(callback) {\n            callback  = callback || ((err) => {});\n\n            TKTApi.setPending(this.cart.id, (err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                return callback(/*err*/null, rsp);\n            });\n        },\n\n        set_open: function(callback) {\n            callback  = callback || ((err) => {});\n\n            TKTApi.setOpen(this.cart.id, (err, status, rsp) => {\n                return callback(err);\n            });\n        },\n\n        get_new: function(callback) {\n            callback  = callback || ((err) => {});\n\n            TKTApi.getNew((err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                return this.load_cart(callback);\n            });\n        },\n\n        set_user_data: function(data, callback) {\n            callback  = callback || ((err) => {});\n\n            TKTApi.setUserData(this.cart.id, data, (err, status, rsp) => {\n                return callback(err);\n            });\n        },\n\n        checkout: function(user_data, callback) {\n            callback  = callback || ((err) => {});\n            user_data = user_data || {};\n\n            TKTApi.pay(this.cart.id, 'POS_CASH', user_data, (err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                TKTApi.confirm(this.cart.id, (err, status, rsp) => {\n                    if (err)\n                        return callback(err);\n\n                    return callback(/*err*/null, rsp);\n                });\n            });\n        },\n\n        emit_update: function() {\n            postal.publish({\n                channel: \"cart\",\n                topic: \"update\",\n                data: {\n                    cart: this.cart,\n                    internal: true\n                }\n            });\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return Cart;\n});\n\n"]}