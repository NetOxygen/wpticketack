{"version":3,"sources":["app/User/UserConnect.js"],"names":["e","a","define","UserConnect","$container","Object","prototype","toString","call","i","postal","o","m","TKTApi","M","data","t","s","callback","_this","render","push","emit_connection_update","loginTicket","topic","_this2","c","va","utc","Y","ticket","empty","unusedTokens","unusedInput","overflow","charsLeftOver","disconnect_pass","invalidFormat","iso","meridiem","_pf","y","ticket_view_url","isNaN","_d","getTime","$","change","invalidMonth","invalidWeekday","weekdayMismatch","nullInput","userInvalidated","_this4","pass_infos","length","bigHour","isFrozen","number","_isValid","detach","Array","some","this"],"mappings":"CAAA,SAAAA,EAAAC,GAc4CC,iJAd5C,kFAsB2B,SACfC,EAAAA,GADe,OADCC,aAAAA,OACD,mBAAAC,OAAAC,UAAAC,SAAAC,KAAAR,GAAA,SADCS,EAAAT,GAKHG,OAAAA,MAKbO,GAAAA,oBAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GACa,SADIC,EAAAX,GACJ,YADbU,IAAAA,EAAiB,SAAAE,EAAAZ,GAAA,MAAAa,iBALJb,GAAA,oBAAAK,OAAAC,UAAAC,SAAAC,KAAAR,GAAA,SAKIa,EAAAb,GAAA,OAUFU,aAAAA,MACF,kBAAAL,OAAAC,UAAAC,SAAAC,KAAAR,GAAA,SAAAc,EAAAd,EAETe,GAFS,IAAAC,EAAAC,EAFwBC,GAAA,IAAAF,EAAA,EAnBrBG,EAAAA,EAAAC,SAAAL,EAmBqBE,EAAAI,KAExBpB,EAAAD,EAAAgB,GAAAA,IAAA,OAXIC,EAAjBP,SAsBAY,EAAAA,EAAAA,GAEc,OAGdT,OAAOU,UAAAA,eAAAA,KAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAICC,GAJDD,IAAAA,IASCE,KAAAxB,EATDsB,EAAPV,EAHcG,KAAAhB,EAAAgB,GAAAf,EAAAe,IAAA,OAxBdN,EAAAA,EAAAA,cAAAA,EAAAA,SAAAA,EAAAA,UAAAA,EAAAA,EAAAA,aAAAA,EAAAA,QAAAA,EAAAA,SAAAA,EA2CoB,SAAAgB,EAAA1B,EAAAyB,EAAAA,EAAAR,GAAA,OAAsBU,GAAA3B,EAAAC,EAAAe,EAAAC,GAAA,GAAAW,MAAA,SAAAC,EAAA7B,GAAtB,OAQpBa,MAAKT,EAAAA,MAA0D0B,EAAAA,IAAAA,CAFzCC,OAKpB,EAAAC,aACKjB,GANekB,YAAAlB,GAAAmB,UAapBZ,EAboBa,cANF,EA3CpBzB,WAAAA,EAnBmD0B,aAAA,KAAAC,eAAA,EA4FpDlC,iBAAAA,EA5FoDmC,KAF/DpC,EAAAA,gBAkEyBoB,GAhEsCiB,SAAA,KAmBnD7B,SAAAA,EAiDJU,iBAAQA,IAAkBpB,EAAAwC,IAAA,SAEtBC,EAAAzC,GAA6D,GAAA,MAAE8B,EAAAA,SAAF,CAAA,IAAUY,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,EAAAA,gBAAV,SAAA1C,GAFvC,OAAA,MAAAA,IAKpBiB,GAAA0B,MAAA3C,EAAA4C,GAAAC,YAAFC,EAAwCZ,SAAK9B,IAAY2C,EAAAA,QAAO9C,EAAA+C,eAAO/C,EAAAgD,iBAAAhD,EAAAiD,kBAAAjD,EAAAkD,YAAAlD,EAAAoC,gBAAApC,EAAAmD,mBAAAnD,EAAAsC,UAAAtC,EAAAsC,UAAAvB,GAAA,GACrEqC,EAAAA,UAAUC,EAAAA,GAAV,IAAuBrD,EAAAkC,eAAA,IAAAlC,EAAA+B,aAAAuB,aAAA,IAAAtD,EAAAuD,SAAA,MAAAnD,OAAAoD,UAAApD,OAAAoD,SAAAzD,GAAA,OACrB0D,EADqB1D,EAAA2D,SAEhBb,EAH8D,OALjD9C,EAAA2D,SAAA,SAgBtBb,EAAE9C,GAhBoB,IAjDtBU,EAAAA,EAAAA,KAoEJkD,OAAAA,MAAQ5D,EAAA4D,EAAAA,EAAA3D,GAAWD,GAAA6B,EAAA5B,GAAAmD,iBAAA,EAAAnD,EApEfS,EAVgBmD,MAAAvD,UAAAwD,KAAAD,MAAAvD,UAAAwD,KAAA,SAAA9D,GAmFxB,IAAOG,IAAAA,EAAAA,OAnFiB4D,MAAA/C,EAAAf,EAAAsD,SAAA,EAAAtC,EAAA,EAAAA,EAAAD,EAAAC,IAPgBf,GAAAA,KAAAA,GAAAA,EAAAA,KAAAA,KAAAA,EAAAA,GAAAA,EAAAA","file":"app.js","sourcesContent":["/**\n * Show a user connection widget\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"User/UserConnect\"\n * >\n */\ndefine(\n    ['postal', 'jquery', 'api', 'template', 'Ticket'],\n    function dependencies(postal, $, TKTApi, Template, Ticket) {\n\n    function UserConnect($container, state) {\n        this.$container = $container;\n        this.data       = {\n            pass_infos: {}\n        };\n    }\n\n    UserConnect.prototype = {\n        attach: function() {\n            this.init();\n        },\n\n        init: function() {\n            TKTApi.viewTicket((err, status, rsp) => {\n                this.render(!err ? new Ticket(rsp) : null);\n            });\n\n            postal.subscribe({\n                channel: \"connection\",\n                topic: \"update\",\n                callback: (data, envelope) => {\n                    this.render(data.ticket);\n                }\n            });\n        },\n\n        emit_connection_update: function(ticket) {\n            postal.publish({\n                channel: \"connection\",\n                topic: \"update\",\n                data: {\n                    ticket: ticket\n                }\n            });\n        },\n\n        connect_pass: function() {\n            $('.user-connect-error', this.$container).html(\"\").addClass('d-none');\n\n            if (!this.data.pass_infos.number || !this.data.pass_infos.key)\n                return $('.pass-error')\n                    .html('Veuillez remplir les deux champs')\n                    .removeClass('d-none');\n\n            TKTApi.loginTicket(\n                this.data.pass_infos.number,\n                this.data.pass_infos.key,\n                (err, status, rsp) => {\n                    if (err)\n                        return $('.pass-error')\n                            .html('Les informations que vous avez saisies sont invalides')\n                            .removeClass('d-none');\n\n                    this.data.ticket = new Ticket(rsp);\n                    this.emit_connection_update(this.data.ticket);\n                }\n            );\n        },\n\n        disconnect_pass: function() {\n            TKTApi.logoutTicket((err, status, rsp) => {\n                if (!err)\n                    this.emit_connection_update(null);\n            });\n        },\n\n        render: function (ticket) {\n            const ticket_view_url = TKTApi.getTicketViewUrl();\n            this.$container.html(Template.render('tkt-user-connect-tpl', { ticket, ticket_view_url }));\n\n            // bind pass fields\n            $('.pass-number-input,.pass-key-input', this.$container).change((e) => {\n              this.data.pass_infos = {\n                number: $('.pass-number-input', this.$container).val(),\n                key: $('.pass-key-input', this.$container).val()\n              };\n            });\n\n            // bind pass connect button\n            $('.connect-btn', this.$container).click(this.connect_pass.bind(this));\n\n            // bind pass disconnect button\n            $('.disconnect-btn', this.$container).click(this.disconnect_pass.bind(this));\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return UserConnect;\n});\n"]}