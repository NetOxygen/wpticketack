{"version":3,"sources":["app/Booking/Form.js"],"names":["e","a","define","Form","prototype","$container","ids","$","toString","call","getUrlParam","Date","Object","M","_this","postal","t","length","click","s","push","callback","h","hasOwnProperty","L","TKTApi","_this2","screening","Screening","va","show_on_load","utc","Y","init","_pf","empty","getScreeningsInfo","unusedInput","data","overflow","charsLeftOver","screenings","nullInput","pricings","invalidMonth","invalidFormat","ticket","userInvalidated","start_at","iso","_","parsedDateParts","bookability","meridiem","rfc2822","weekdayMismatch","init_store","pass_infos","deinit","initialized","_isValid","f","emit_connection_update","n","Array","some","this","emit_cart_update","d","l","momentProperties","k","o","_isAMomentObject","_i","_f","_l","_strict","_tzm","_isUTC","_offset","_locale","publish","_d","getTime","NaN","isValid","updateOffset","D","p","html","addClass","T","nb","ceil","Math","floor","isFinite","r","_this4","check_bookability","min","rsp","errorMsg","removeClass","connect_pass","g","i18n","w","_this5","console","warn","book","deprecationHandler","arguments","checkBookability","Error","_this6","flash","v","b","loginTicket","to_select","i","set","suppressDeprecationWarnings","keys","ticket_view_url","x","P","toLowerCase","_this8","O","W","build_success_panel","E","A","F","build_form","abs","I","$success_panel","name","build_dates_form","_this7","apply","$dates_form","localeData","ordinal","selected_screening","N","match","z","R","replace","H","invalidDate","G","$tickets_form","Template","lastIndex","J","test","change","U","V","K","Z","B","q","Q","X","ee","ae","te","se","ne","de","re","_e","preventDefault","ue","program_url","config","get","cart_url","Me","select_screening","_w","he","Le","Ye","find","pe","De","Te","ge","url","regex","RegExp","decodeURIComponent","detach","number","val","key"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Show a booking form\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"Booking/Form\"\n *    data-ids=\"12345678-1234-1234-1234-123456789012,...\"\n * >\n */\ndefine( [\n        'config', 'i18n', 'postal', 'lodash',\n        'template', 'jquery', 'api',\n        'moment', 'Cart', 'Screening', 'Ticket'\n    ], function dependencies(\n        config, i18n, postal, _,\n        Template, $, TKTApi,\n        moment, CartModel, Screening, Ticket) {\n\n    function Form($container, state) {\n        this.$container  = $container;\n        this.initialized = false;\n\n        this.ids                = this.$container.data('ids').split(',');\n        this.show_on_load       = parseInt(this.getUrlParam('book')) == 1;\n        this.selected_screening = this.getUrlParam('s_id');\n    }\n\n    Form.prototype = {\n        attach: function() {\n            this.init_store();\n\n            $('.show-booking-form').click((e) => {\n                e.preventDefault();\n\n                if (this.initialized)\n                    return this.deinit();\n\n                this.init();\n            });\n\n            postal.subscribe({\n                channel: \"connection\",\n                topic: \"update\",\n                callback: (data, envelope) => {\n                    this.check_bookability();\n                }\n            });\n\n            if (this.show_on_load)\n                this.init();\n        },\n\n        init: function() {\n            TKTApi.getScreeningsInfo(this.ids, (err, status, rsp) => {\n                this.data.screenings = rsp.map((s) => {\n                    let screening = new Screening(s);\n                    screening.eligible_types = s.eligible_types;\n\n                    return screening;\n                });\n                this.data.screenings = _.sortBy(this.data.screenings, (s) => s.start_at);\n                this.build_form();\n                this.initialized = true;\n            });\n        },\n\n        init_store: function() {\n            this.data = {\n                screenings: [], // current screenings\n                screening: {},  // selected screening\n                pricings: [],   // selected screening pricings\n                pass_infos: {}, // connection infos\n                ticket: {},     // active ticket\n                bookability: {} //selected screening bookability with  active ticket\n            };\n        },\n\n        reset_store_on_screening_change: function() {\n            this.data.screening   = {};\n            this.data.pricings    = {};\n            this.data.pass_infos  = {};\n            this.data.bookability = {};\n        },\n\n        deinit: function() {\n            this.$container.html(\"\");\n            this.initialized = false;\n        },\n\n        emit_cart_update: function(cart) {\n            postal.publish({\n                channel: \"cart\",\n                topic: \"update\",\n                data: {\n                    cart: cart\n                }\n            });\n        },\n\n        emit_connection_update: function(ticket) {\n            postal.publish({\n                channel: \"connection\",\n                topic: \"update\",\n                data: {\n                    ticket: ticket\n                }\n            });\n        },\n\n        process_add_to_cart: function() {\n            $('.pricings-error').html(\"\").addClass('d-none');\n            $('.success-panel').addClass('d-none');\n\n            // Check chosen pricings\n            const chosen_pricings = _.find(this.data.pricings, (nb) => nb > 0);\n            if (!chosen_pricings) {\n                return $('.pricings-error')\n                    .html(i18n.t('Veuillez choisir au moins un billet'))\n                    .removeClass('d-none');\n            }\n\n            // Add to cart\n            TKTApi.addToCart(\n                this.data.screening._id,\n                this.data.pricings,\n                (err, status, rsp) => {\n                    if (err) {\n                        return $('.pricings-error')\n                            .html(rsp.errorMsg)\n                            .removeClass('d-none');\n                    }\n\n                // Hide forms and show success message\n                $('.dates-form, .tickets-form').addClass('d-none');\n                $('.success-panel').removeClass('d-none');\n\n                // Reload and emit cart update\n                TKTApi.loadCart((err, status, rsp) => {\n                    if (err)\n                        return;\n\n                    this.emit_cart_update(new CartModel(rsp));\n                });\n            });\n        },\n\n        book: function() {\n            if (!this.data.screening._id)\n                return new Error(\"No screening\");\n\n            TKTApi.book(this.data.screening._id, (err, status, rsp) => {\n                if (err) {\n                    $('.book-form-success', this.$container).addClass('d-none');\n                    $('.book-form-error', this.$container)\n                        .html(i18n.t(\"Une erreur est survenue. Veuillez ré-essayer ultérieurement.\"))\n                        .removeClass('d-none');\n                } else if (rsp.flash && rsp.flash.error) {\n                    $('.book-form-success', this.$container).addClass('d-none');\n                    $('.book-form-error', this.$container)\n                        .html(rsp.flash.error)\n                        .removeClass('d-none');\n                } else {\n                    $('.book-form-error', this.$container).addClass('d-none');\n                    $('.book-form-success', this.$container)\n                        .html(rsp.flash.success)\n                        .removeClass('d-none');\n                }\n\n                this.check_bookability();\n            });\n        },\n\n        connect_pass: function() {\n            $('.pass-error', this.$container).html(\"\").addClass('d-none');\n\n            if (!this.data.pass_infos.number || !this.data.pass_infos.key)\n                return $('.pass-error')\n                    .html(i18n.t('Veuillez remplir les deux champs'))\n                    .removeClass('d-none');\n\n            TKTApi.loginTicket(\n                this.data.pass_infos.number,\n                this.data.pass_infos.key,\n                (err, status, rsp) => {\n                    if (err)\n                        return $('.pass-error')\n                            .html(i18n.t('Les informations que vous avez saisies sont invalides'))\n                            .removeClass('d-none');\n\n                    this.data.ticket = new Ticket(rsp);\n                    this.emit_connection_update(this.data.ticket);\n\n                    // Redirect to ticket activation if needed\n                    if (this.data.ticket.status == \"new\")\n                        window.location.href =  TKTApi.getTicketViewUrl();\n                }\n            );\n        },\n\n        check_bookability: function(callback) {\n            if (!this.data.screening._id)\n                return new Error(\"No screening\");\n\n            TKTApi.checkBookability(this.data.screening._id, (err, status, rsp) => {\n                if (err)\n                    return false;\n\n                this.data.bookability = rsp;\n\n                if (this.data.bookability.ticket_logged_in) {\n                    $('.connect-panel', this.$container).addClass('d-none');\n                    $('.book-panel', this.$container).removeClass('d-none');\n                    $('.show-bookings-btn', this.$container).removeClass('d-none');\n\n                    if (this.data.bookability.ticket_can_book_screening) {\n                        $('.book-btn', this.$container).removeClass('d-none');\n                        $('.book-form-error', this.$container).addClass('d-none');\n                    } else {\n                        $('.book-btn', this.$container).addClass('d-none');\n                        const msg = this.data.bookability.screening_already_booked ?\n                            i18n.t(\"Vous ne pouvez pas réserver plus de place pour cette séance avec votre abonnement.\") :\n                            i18n.t(\"Vous ne pouvez pas réserver de place pour cette séance avec votre abonnement.\");\n                        $('.book-form-error', this.$container)\n                            .html(msg)\n                            .removeClass('d-none');\n                    }\n                } else {\n                    $('.connect-panel', this.$container).removeClass('d-none');\n                    $('.book-panel', this.$container).addClass('d-none');\n                }\n            });\n        },\n\n        build_form: function() {\n            this.$container.html(\"\");\n            this.$dates_form    = $('<div class=\"dates-form\"></div>').appendTo(this.$container);\n            this.$tickets_form  = $('<div class=\"tickets-form\"></div>').appendTo(this.$container);\n            this.$success_panel = $('<div class=\"success-panel d-none\"></div>').appendTo(this.$container);\n\n            this.build_dates_form();\n            this.build_success_panel();\n        },\n\n        build_dates_form: function() {\n            // render template\n            this.$dates_form.html(Template.render('tkt-booking-form-dates-tpl', {\n                screenings: this.data.screenings,\n            }));\n\n            // bind dates choices\n            $('.date-wrapper span.date').click((e) => {\n                const $date = $(e.target);\n                this.select_screening($date.data('screening_id'));\n            });\n\n            // Select first non full date\n            let to_select = this.selected_screening;\n            if (!to_select) {\n                let i = this.data.screenings.length - 1;\n                while (i >= 0) {\n                    if (this.data.screenings[i].seats.available > 0)\n                        to_select = this.data.screenings[i]._id;\n                    i--;\n                }\n            }\n            this.select_screening(to_select);\n        },\n\n        build_tickets_form: function() {\n            // render template\n            const ticket_view_url = TKTApi.getTicketViewUrl();\n            this.$tickets_form.html(Template.render('tkt-booking-form-pricings-tpl', {\n                screening: this.data.screening,\n                ticket_view_url\n            }));\n\n            // bind pricing fields\n            $('.pricing-input', this.$container).change((e) => {\n              const $input = $(e.target);\n              this.data.pricings[$input.data('pricing')] = parseInt($input.val());\n            });\n\n            // bind pass panel toggler\n            $('a.show-connect-panel-form', this.$container).click((e) => {\n                e.preventDefault();\n                $('.connect-panel-form').removeClass('d-none');\n            });\n\n            // bind pass fields\n            $('.pass-number-input,.pass-key-input', this.$container).change((e) => {\n              this.data.pass_infos = {\n                number: $('.pass-number-input', this.$container).val(),\n                key: $('.pass-key-input', this.$container).val()\n              };\n            });\n\n            // bind pass connect button\n            $('.connect-btn', this.$container).click(this.connect_pass.bind(this));\n\n            // bind book button\n            $('.book-btn').click(this.book.bind(this));\n\n            // bind add-to-cart button\n            $('.add-to-cart-btn').click((e) => {\n              this.process_add_to_cart();\n            });\n        },\n\n        build_success_panel: function() {\n            // render template\n            this.$success_panel.html(Template.render('tkt-booking-form-success-tpl', {\n                program_url: config.get('program_url'),\n                cart_url: config.get('cart_url')\n            }));\n        },\n\n        select_screening: function (screening_id) {\n            $('.date-wrapper .date').removeClass('active');\n            $('.date-wrapper .date[data-screening_id=\"' + screening_id + '\"]').addClass('active');\n\n            // reset data\n            this.reset_store_on_screening_change();\n\n            this.data.screening = _.find(this.data.screenings, (s) => s._id === screening_id );\n            this.build_tickets_form();\n\n            this.check_bookability();\n        },\n\n        getUrlParam(name) {\n            const url = window.location.href;\n            name = name.replace(/[\\[\\]]/g, '\\\\$&');\n            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n                results = regex.exec(url);\n            if (!results) return null;\n            if (!results[2]) return '';\n            return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return Form;\n});\n"]}