{"version":3,"sources":["app/Booking/Form.js"],"names":["e","a","define","Form","prototype","$container","ids","$","toString","call","getUrlParam","Date","Object","M","_this","postal","t","length","click","s","push","callback","h","hasOwnProperty","L","TKTApi","_this2","screening","Screening","va","show_on_load","utc","Y","init","_pf","empty","getScreeningsInfo","unusedInput","data","overflow","charsLeftOver","screenings","nullInput","pricings","invalidMonth","invalidFormat","ticket","userInvalidated","start_at","iso","_","parsedDateParts","bookability","meridiem","rfc2822","weekdayMismatch","init_store","pass_infos","deinit","initialized","_isValid","f","emit_connection_update","n","Array","some","this","emit_cart_update","d","l","momentProperties","k","o","_isAMomentObject","_i","_f","_l","_strict","_tzm","_isUTC","_offset","_locale","publish","html","_d","getTime","NaN","isValid","updateOffset","D","p","book","addClass","T","Math","ceil","floor","addToCart","check_bookability","min","abs","r","_this5","suppressDeprecationWarnings","CartModel","console","warn","_this4","deprecationHandler","checkBookability","Error","arguments","err","_this6","slice","rsp","join","stack","v","S","connect_pass","$tickets_form","build_success_panel","number","key","to_select","i","select_screening","j","ticket_view_url","keys","_this8","x","P","toLowerCase","O","E","A","build_form","build_tickets_form","pow","appendTo","I","url","name","build_dates_form","_this7","R","$dates_form","Template","render","$date","target","apply","C","G","localeData","N","seats","available","replace","H","lastIndex","$input","U","V","K","B","q","Q","X","ee","ae","te","se","ne","de","re","_e","ie","preventDefault","ue","le","program_url","cart_url","config","_w","he","Le","screening_id","fe","ke","pe","De","ge","regex","results","year","detach","val"],"mappings":"CAAA,SAAAA,EAAAC,GAWAC,iJAXA,oQAoBqC,SAFSC,EAAAA,GAW1CA,YAAKC,IAAYC,EAXyB,SAalCC,EAAAA,GADe,MAGfC,iBAAAA,GAA8B,oBAA9BA,OAfkCH,UAAAI,SAAAC,KAAAT,GAAA,SAOEU,EAAAA,GAQCP,OAAAC,aAMjCO,MAAA,kBAAAC,OAAAR,UAAAI,SAAAC,KAAAT,GATW,SAAAa,EAAAb,EAAAc,GAAA,IAYfC,EAAAA,EAAAA,GAZe,IAYER,EAAA,EAAAS,EAAAhB,EAAAiB,SAAAC,EAAAC,EAAAC,KAGbC,EAAAA,EAAAA,GAAAA,IAHa,OAAAF,EAAA,SAAAG,EAAAtB,EASbc,GATa,OAZFF,OAAAR,UAAAmB,eAAAd,KAAAT,EAAAC,GAwBF,SAAAuB,EAAAxB,EACbyB,GADa,IAAA,IAETC,KAAAA,EAFSJ,EAAArB,EAE6BoB,KAAAA,EAC9BM,GAAAA,EAAAA,IAAgBC,OAAAA,EAAAA,EACpBD,cAAAA,EAAAA,SADoBC,EAAAA,UAAAA,EAAAA,EAAAA,aAAAA,EAAAA,QAAAA,EAAAA,SAAAA,EAHf,SAAAb,EAxBEf,EAAAC,EAAAe,EAAAG,GAAA,OAgC2CU,GAAA7B,EAAA8B,EAAAA,EAAAA,GAAAA,GAAAC,MAhC3C,SASXC,EAAAhC,GAgBqDiC,OAAzDR,MAAAA,EAAAA,MADazB,EAAAkC,IAAA,CAAAC,OAAAT,EAzBJD,aAAAW,GAAAC,YAuCDC,GAAWC,UACdD,EADcE,cAEfC,EAFeC,WAIfC,EAJeC,aAvCV,KAAAC,eA6CLC,EALQC,iBAAAC,EAAAC,KAAAC,EAxCHC,gBA8CLC,GA9CKC,SAuCU,KAvCVC,SAyBI,EAfTC,iBAAA,IAwCoCC,EAAAA,IAG9BC,SAAAA,EAAAA,GAAAA,GAAAA,MArDD9B,EAAAA,SAqDC8B,CAAAA,IAINd,EAAAA,EAAAA,GAAAe,EAJMD,EAAAA,KAAAA,EAAAA,gBAAAA,SAAAA,GAKVA,OAAAA,MALUA,IAMVX,GAAKa,MANKF,EAAAA,GAAAA,YAAAA,EAAAA,SAAAA,IAAAA,EAAAA,QAAAA,EAAAA,eAAAA,EAAAA,iBAAAA,EAAAA,kBAAAA,EAAAA,YAAAA,EAAAA,gBAAAA,EAAAA,mBAAAA,EAAAA,UAAAA,EAAAA,UAAAA,GAAAA,GArDDL,EAAAA,UAAAjC,EAqDCsC,GAAAA,IAAAA,EAAAA,eAAAA,IAAAA,EAAAA,aAAAA,aAAAA,IAAAA,EAAAA,SAAAA,MAAAA,OAAAA,UAAAA,OAAAA,SAAAA,GADV,OAAAtC,EA1CInB,EAAA4D,SAAAzC,EAqDW,OAAAnB,EAGXsC,SAHW,SA/DNuB,EAAA7D,GA+DM,IASnB8D,EAAAA,EAAAA,KATmB,OArDX,MAAA9D,EAAAwB,EAAAQ,EAAA/B,GAAAD,GAAAgC,EAAA/B,GAAA8C,iBAAA,EAAA9C,EAiEO8D,EAAAC,MAFI5D,UAGXkC,KACIQ,MAFG1C,UAAA6D,KAAA,SAAAjE,GAAA,IAFI,IADsB2D,EAAAA,OACtBO,MADsBlD,EAG1Bf,EAAAgB,SAAA,EAAAE,EAAA,EAAAA,EAAAH,EAAAG,IAjEP,GAAAA,KAAAlB,GAAAD,EAAAS,KAAAyD,KAAAjE,EAAAkB,GAAAA,EAAAlB,GAwEwBkE,OAAAA,EAAA,OAC5B5D,GAAE,IAAA6D,EAAAC,EAAAC,iBAAA,GAAA,SAAAC,EAAAvE,EAD0BsC,GAC1B,IAAAtB,EAD0BG,EAAA4C,EAAA,GAxExBS,EAAAvE,EAAAwE,oBAAAzE,EAAAyE,iBAAAxE,EAAAwE,kBAAAD,EAAAvE,EAAAyE,MAAA1E,EAAA0E,GAAAzE,EAAAyE,IAAAF,EAAAvE,EAAA0E,MAAA3E,EAAA2E,GAAA1E,EAAA0E,IAAAH,EAAAvE,EAAA2E,MAAA5E,EAAA4E,GAAA3E,EAAA2E,IAAAJ,EAAAvE,EAAA4E,WAAA7E,EAAA6E,QAAA5E,EAAA4E,SAAAL,EAAAvE,EAAA6E,QAAA9E,EAAA8E,KAAA7E,EAAA6E,MAAAN,EAAAvE,EAAA8E,UAAA/E,EAAA+E,OAAA9E,EAAA8E,QAAAP,EAAAvE,EAAA+E,WAAAhF,EAAAgF,QAAA/E,EAAA+E,SAAAR,EAAAvE,EAAAiC,OAAAlC,EAAAkC,IAAAF,EAAA/B,IAAAuE,EAAAvE,EAAAgF,WAAAjF,EAAAiF,QAAAhF,EAAAgF,SAAA,EAAAb,EAAAnD,OAwFa6C,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OACI9C,IADJD,EAAAA,EADSmE,EAAAA,EAAAd,EAAApD,OAAAhB,EAAAmB,GAAA4C,GAAA,OAAA/D,EAAA,IAAAC,GAAA,EAAA,SACTc,EAEAoE,GAAAA,EA1FbjB,KAAAlE,GAAAkE,KAAAkB,GAAA,IAAAzE,KAAA,MAAAX,EAAAoF,GAAApF,EAAAoF,GAAAC,UAAAC,KAAApB,KAAAqB,YAAArB,KAAAkB,GAAA,IAAAzE,KAAA2E,OAAA,IAAArF,IAAAA,GAAA,EAAAoE,EAAAmB,aAAAtB,MAAAjE,GAAA,GAVK,SAAAwF,EAAAzF,GAAA,OAsHPA,aAAA0F,GAAWP,MAAjBQ,GAAiBC,MAAA5F,EAAAyE,iBAAA,SAAAoB,EAAA7F,GAAA,OAtHJA,EAAA,EAAA8F,KAAAC,KAAA/F,IAAA,EAAA8F,KAAAE,MAAAhG,GA0Ha2B,SAAAA,EAAAA,GAAAA,IAAAA,GA1Hb3B,EAAAgB,EAAA,EAAA,OAgIoCS,IAAlCwE,GAAAA,SAMH1F,KAAEoB,EAAAA,EADC1B,IALkCwB,EAYpCyE,SAAAA,EAAAA,EAAAA,EAtBIlF,GAsBJkF,IAAAA,EAAAA,EAlBkDJ,KAAAK,IAAAnG,EAAAiB,OAAAhB,EAAAgB,QAAAmD,EAAA0B,KAAAM,IAAApG,EAAAiB,OAAAhB,EAAAgB,QAAAoF,EAAA,EAAA,IAAAlF,EA0BvDZ,EAAAY,EAAA4C,EAAA5C,KA1BuDH,GA8B3DS,EAAAA,KAAAA,EAAAA,KACSa,GAAAA,EAAAA,EAAAA,MAAKmB,EAAAA,EADdhC,MA9B2D4E,IAAA,OAAAA,EAuCnDC,EACAA,SAAAA,EAAAA,IAPkB,IAAAjC,EAAAkC,6BAXLC,oBAWKC,SAAAA,QAAAC,MAAAD,QAAAC,KAAA,wBAAA1G,GAjCiC,SAMdyB,EAhIpCsC,EAAAK,GAAA,IAULiC,GAAA,EAkKJV,OAAAnE,EAAA,WACW,GAAAmF,MAAAtC,EAAAuC,oBAAAvC,EAAAuC,mBAAA,KAAA7C,GAAAsC,EAAA,CAEX5E,IAAAA,IAAOoF,EAAAA,EAAAA,GAAPpF,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,CACI,GAAAzB,EAAA8G,GAAA,iBAHOC,UAAA/F,GAAA,CAMFsB,IAAKc,IAALd,KAAKc,GAALd,MAJ8DtB,EAAA,KAAAgG,UAAA,GAM/DC,GAAAA,EAAAA,KAAAA,UAAAA,GAAAA,GAAAA,KACEjH,EAAAA,EAAAkH,MAAA,GAAA,QAImDlH,EAC/CmH,UAAAA,GAD+C5G,EAAAa,KAAApB,GACjDO,EADiDwD,EAAA,gBAG9CC,MAAA5D,UAAA8G,MAAAzG,KAAAR,GAAAmH,KAAA,IAAA,MAAA,IAAAN,OAAAO,OAAAhB,GAAA,EAAA,OAAAjC,EARX7D,MAAA2D,KAAA6C,YAQW3C,GAdwD,IAAAjD,EAAAmG,EAF5D,GAAA,SAnKPC,EAAAvH,EAAAC,GAmMeuH,MAAAA,EAAAA,oBAGdC,EAAAA,mBAAiBlH,EAAAA,GAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAAA,IAAAA,GAAAA,SACtBA,EAAAP,GADsBO,OAItBP,aAAK0H,UAALC,sBAPmBlE,OAAAmE,UAOnBpH,SAAAC,KAAAT,GAJsBO,SActBA,EAAAA,EAAAA,GAPyB,IAAAS,EAAAG,EAarB0G,EAAAA,GAAAA,GAAAA,IAAAA,KAAAA,EAbqBvG,EAAArB,EAiBjBqG,KACIuB,EAAAA,EAAAA,KADJC,EACgB7H,EAAAe,KAAKsB,EAAKG,GAlBT,GAAAjB,EAAAL,EAAAH,GAAAhB,EAAAgB,IAAAQ,EAAAL,EAAAH,GAAAf,EAAAe,KAAA,MAAAf,EAAAe,GAAAG,EAAAH,GAAAf,EAAAe,UAAAG,EAAAH,IAAA,IAAAA,KAmBjB8G,EAnBiBxG,EAAAtB,EAsBpB+H,KAAAA,EAAAA,EAAAA,IAAiBF,EAAAA,EAAAA,MAAjBE,EAtBoB/G,GAsBpB+G,EAAAA,GAAAA,EAAAA,KAAAA,OAAAA,EA7BiBxH,SAtMlByH,EAAAhI,GAyOqEkG,MAAAA,GAAAA,KAAAA,IAC1DlG,GAD0DqE,EAAAkC,6BAErE0B,EAFqE5D,EAAAuC,mBAAA,KAAAzF,EAAAP,OAAAsH,KAAAtH,OAAAsH,KAAA,SAAAlI,GAAA,IAAAC,EAAAe,EAH9C,GAG8C,IAMtBS,KAAAA,EAAAH,EAAAtB,EAEjDmI,IAAAA,EAAAA,KAAAA,GAAAA,OAAAA,GAFiD,IAAAC,EAAA,GATxB,SAAAC,EAAArI,EAAAC,GAAA,IAAAe,EAAAhB,EAAAsI,cAAAF,EAAApH,GAAAoH,EAAApH,EAuBvB2G,KAAAA,EAAAA,GAAAA,EAFmE,SAAAY,EAAAvI,GAAA,MAAA,iBAQrEA,EAAAoI,EAAApI,IAAFO,EAAAA,EAAAA,oBAA8CiH,EAG/BtG,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,IAAAA,KAAAA,EAAAA,EAAAA,EAAAA,KAhCYjB,EAAAsI,EAAAvH,MAAAG,EAAAlB,GAAAD,EAAAgB,IAAA,OAAAG,EAwCC,IAAAqH,EAAA,GAAA,SAAAC,EAAAzI,EA/BuBC,GAAAuI,EAAAxI,GANsBC,EAzOrE,SA6R+CyI,EAAAA,EAAAA,EAAA1H,GAAOG,IAAPA,EAAA,GAPbd,KAAAA,IAAA8E,GAAApB,EAOoB5C,EAAAA,EAAAA,OAAAA,OAC1D,GAAKwH,EAAAA,EAAL,IAAA,GAAA,KAAA7C,KAAA8C,IAAA,GAAA9C,KAAK6C,IARiCE,EAAAA,IAAArI,WAAAH,OAOoBc,GAAAA,EAAAA,IAAAA,EAvSjD,uLAuSiDA,EAAAA,6CAAAA,EAAAA,GAAAA,EAAAA,GAAAA,SAO1D2H,EAAA9I,EAAM+I,EAAAA,EAAAA,GAPoD5H,IAQ1D6H,EAAAA,EAR0D7H,iBA7RtDA,IAAA4C,EAAA,WAwSJkF,OAAAA,KAAAA,OALcjJ,IAAAkJ,EAAAA,GAAAnF,GAAA9D,IAAAkJ,EAAAlJ,EAAA,IAAA,WAMd,OAAiBmJ,EAAAA,EAAAA,MANHjE,KAAAkE,WAAAC,EAAAD,GAAApJ,EAAA,MAxToBM,IAAA4I,EAAAnI,GAAA,WAAA,OAAAkD,KAAAqF,aAAAC,QAAAzF,EAAA0F,MAAAvF,KAAA6C,WAAA/G,KAwTpB,SAzEd0J,EAAA1J,EAAI6H,GAyEU,OAxEd7H,EAAK6H,WAAW5H,EAAA0J,EAAA1J,EAAAD,EAAA4J,cAAAC,EAAA5J,GAAA4J,EAAA5J,IAAA,SAAAkB,GAAA,IACZnB,EAAA+D,EAAI+D,EAAI1D,EAAK9B,EAAAA,MAAKG,GADN,IAEZzC,EAAA,EAAO8H,EAAK1D,EAAZnD,OAAejB,EAAA+D,EAAA/D,IAAAmJ,EAAA/E,EACXpE,IAAIoE,EAAApE,GAAAmJ,EAAU1G,EAAAA,IAAAA,EAAWqF,IAAGgC,EAAMC,EAAAA,IAAAA,MAAlC,YAAA9J,EAAA+J,QAAA,WAAA,IAAA/J,EAAA+J,QAAA,MAAA,IAAA,OAAA,SACInC,GAFO,IAGXC,EAAAA,EAHW,GAAA,IAFH7H,EAAA,EAAAA,EAAA8D,EAAA9D,IAwEFe,GAAAiJ,EAAA7F,EAAAnE,IAAAmE,EAAAnE,GAAAQ,KAAAT,EAAAmB,GAAAiD,EAAAnE,GAhEd,OAAK8H,GARW,CAWpBY,GAAAA,EAAAA,GAAAA,IAAAA,EAAAA,aAAoBA,cAAW,SAE3BgB,EAAA3J,EAAMiI,GAFqB,IAG3BjH,EAAA,EAAyE,SACrEW,EAAAA,GADqE,OAErEsG,EAAAA,eAAAA,IAAAA,EALuB,IAS3B1H,EAAE2J,UAAA,EAAF3J,GAAoBS,GAAKX,EAAAA,KAAzBE,IAAmDP,EACjDA,EAAAgK,QAAMG,EAAS5J,GAAIiJ,EAAAA,UAD8B,EAAAxI,GAAA,EAAA,OAAAhB,EATxB,IAAAoK,EAe3B7J,KAAE8J,EAAA,OAAAC,EAAA,QAA6B/J,EAAA,QAAKF,EAAYa,aAAMqJ,EAAA,QAAOC,EAAA,YAAAC,EAAA,gBAAAC,EAAA,UAAAC,GAAA,UAAAC,GAAA,eAAAC,GAAA,MAAAC,GAAA,WAAAC,GAAA,qBAAAC,GAAA,0BAAAC,GAAA,wJAAAC,GAAA,GAAA,SAAAC,GACzDnL,EAAEoL,EAAAA,GADuDF,GAAAlL,GAEzDO,EAAES,GAAAA,EAAA,SAAAhB,EAAFO,GAFyD,OAflCP,GAAAmB,EAAAA,EAAAH,GAAA,SAgC3BT,GAAEP,GAhCyB,OAmCzBA,EAAAgK,QAAA,yBAA0B,QAAO,IAAAqB,GAAnC9K,GAnC2B,SAtOvB+K,GAAAtL,EAAAgB,GA8QR0G,IAAAA,EAAAA,EAAAA,EAAgC,IAE5B,iBAAoBvC,IAAKkE,EAAAA,CAAAA,IAASC,EAAAA,KAAOnI,EAAA,SAAAnB,EAAAC,GACrCsL,EAAAA,GAAAA,EAAAA,KACAC,EAAAA,EAAAA,EAAUC,EAAAA,OAAWxL,IAFgDoL,GAAzErL,EAF4BC,IAAAkB,EA9QxB,SAsRR4G,GAAAA,EAAAA,GAA0CuD,GAAAtL,EACpC,SAAAA,EAAAC,EAAAe,EAAAG,GACFZ,EAAEmL,GAAA1K,EAAA0K,IAAA,GAAA3H,EAAA/D,EAAAgB,EAAA0K,GAAA1K,EAAAG,KAKiD,IAAAwK,GAAA,EAAAC,GAAA,EAAOzK,GAAAA,EAAAA,GAAU0K,EAAAA,GAAjB,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA,SAA7B/I,GAPgBlD,GAAA,OAQtCkM,GAAKvD,GAAAA,IAAAA,IARiC,SAtRlCuD,GAAAlM,GAmSRU,OAAAA,EAAAA,GAnSQ,GAAAV,EAAAU,KAAAA,GAmSIsI,EAAM,KAAA,EAAAF,EAAA,IAAA,EAEdE,EAAAA,WAFc,IAGdhJ,EAAImM,KAAAA,OAHU,OAKdnM,GAAKoM,KAAL,GAAApM,EAAA,IAAAA,IAAA8I,EAAA,EAAA,CALc,KAMd,GANc,EAAA,WAAA,OAnSV5E,KAAAmI,OAAA,MA6SRC,EAAAA,EAAAA,CAAmB,OA3TqB5L,GAgU5C,EAAA,QAhU4CA,EAAAA,EAAAA,CAdhDR,o+ZAwRqCF,IAAAC,IAAAqB,EAAA4J,GAErBtD,GAAKrH,GAAEP,GAAAC,EAAA4E,QAAA5E,EAAFM,SAA0BF,IAAAA,OAAYkM,GAFtBvM,EAAAgK,QAAA,KAAA,IAAAA,QAAA,sCAAA,SAAAhK,EAAAC,EAAAe,EAAAG,EAAA4C,GAAA,OAD8C9D,GAAAe,GAAAG,GAAA4C,0pBAC9C/D,EAAAC","file":"app.js","sourcesContent":["/**\n * Show a booking form\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"Booking/Form\"\n *    data-ids=\"12345678-1234-1234-1234-123456789012,...\"\n * >\n */\ndefine( [\n        'config', 'i18n', 'postal', 'lodash',\n        'template', 'jquery', 'api',\n        'moment', 'Cart', 'Screening', 'Ticket'\n    ], function dependencies(\n        config, i18n, postal, _,\n        Template, $, TKTApi,\n        moment, CartModel, Screening, Ticket) {\n\n    function Form($container, state) {\n        this.$container  = $container;\n        this.initialized = false;\n\n        this.ids                = this.$container.data('ids').split(',');\n        this.show_on_load       = parseInt(this.getUrlParam('book')) == 1;\n        this.selected_screening = this.getUrlParam('s_id');\n    }\n\n    Form.prototype = {\n        attach: function() {\n            this.init_store();\n\n            $('.show-booking-form').click((e) => {\n                e.preventDefault();\n\n                if (this.initialized)\n                    return this.deinit();\n\n                this.init();\n            });\n\n            postal.subscribe({\n                channel: \"connection\",\n                topic: \"update\",\n                callback: (data, envelope) => {\n                    this.check_bookability();\n                }\n            });\n\n            if (this.show_on_load)\n                this.init();\n        },\n\n        init: function() {\n            TKTApi.getScreeningsInfo(this.ids, (err, status, rsp) => {\n                this.data.screenings = rsp.map((s) => {\n                    let screening = new Screening(s);\n                    screening.eligible_types = s.eligible_types;\n\n                    return screening;\n                });\n                this.data.screenings = _.sortBy(this.data.screenings, (s) => s.start_at);\n                this.build_form();\n                this.initialized = true;\n            });\n        },\n\n        init_store: function() {\n            this.data = {\n                screenings: [], // current screenings\n                screening: {},  // selected screening\n                pricings: [],   // selected screening pricings\n                pass_infos: {}, // connection infos\n                ticket: {},     // active ticket\n                bookability: {} //selected screening bookability with  active ticket\n            };\n        },\n\n        reset_store_on_screening_change: function() {\n            this.data.screening   = {};\n            this.data.pricings    = {};\n            this.data.pass_infos  = {};\n            this.data.bookability = {};\n        },\n\n        deinit: function() {\n            this.$container.html(\"\");\n            this.initialized = false;\n        },\n\n        emit_cart_update: function(cart) {\n            postal.publish({\n                channel: \"cart\",\n                topic: \"update\",\n                data: {\n                    cart: cart\n                }\n            });\n        },\n\n        emit_connection_update: function(ticket) {\n            postal.publish({\n                channel: \"connection\",\n                topic: \"update\",\n                data: {\n                    ticket: ticket\n                }\n            });\n        },\n\n        process_add_to_cart: function() {\n            $('.pricings-error').html(\"\").addClass('d-none');\n\n            // Check chosen pricings\n            const chosen_pricings = _.find(this.data.pricings, (nb) => nb > 0);\n            if (!chosen_pricings) {\n                return $('.pricings-error')\n                    .html(i18n.t('Veuillez choisir au moins un billet'))\n                    .removeClass('d-none');\n            }\n\n            // Add to cart\n            TKTApi.addToCart(\n                this.data.screening._id,\n                this.data.pricings,\n                (err, status, rsp) => {\n                    if (err) {\n                        return $('.pricings-error')\n                            .html(rsp.errorMsg)\n                            .removeClass('d-none');\n                    }\n\n                // Hide forms and show success message\n                $('.dates-form, .tickets-form').addClass('d-none');\n                $('.success-panel').removeClass('d-none');\n\n                // Reload and emit cart update\n                TKTApi.loadCart((err, status, rsp) => {\n                    if (err)\n                        return;\n\n                    this.emit_cart_update(new CartModel(rsp));\n                });\n            });\n        },\n\n        book: function() {\n            if (!this.data.screening._id)\n                return new Error(\"No screening\");\n\n            TKTApi.book(this.data.screening._id, (err, status, rsp) => {\n                if (err) {\n                    $('.book-form-success', this.$container).addClass('d-none');\n                    $('.book-form-error', this.$container)\n                        .html(i18n.t(\"Une erreur est survenue. Veuillez ré-essayer ultérieurement.\"))\n                        .removeClass('d-none');\n                } else if (rsp.flash && rsp.flash.error) {\n                    $('.book-form-success', this.$container).addClass('d-none');\n                    $('.book-form-error', this.$container)\n                        .html(rsp.flash.error)\n                        .removeClass('d-none');\n                } else {\n                    $('.book-form-error', this.$container).addClass('d-none');\n                    $('.book-form-success', this.$container)\n                        .html(rsp.flash.success)\n                        .removeClass('d-none');\n                }\n\n                this.check_bookability();\n            });\n        },\n\n        connect_pass: function() {\n            $('.pass-error', this.$container).html(\"\").addClass('d-none');\n\n            if (!this.data.pass_infos.number || !this.data.pass_infos.key)\n                return $('.pass-error')\n                    .html(i18n.t('Veuillez remplir les deux champs'))\n                    .removeClass('d-none');\n\n            TKTApi.loginTicket(\n                this.data.pass_infos.number,\n                this.data.pass_infos.key,\n                (err, status, rsp) => {\n                    if (err)\n                        return $('.pass-error')\n                            .html(i18n.t('Les informations que vous avez saisies sont invalides'))\n                            .removeClass('d-none');\n\n                    this.data.ticket = new Ticket(rsp);\n                    this.emit_connection_update(this.data.ticket);\n\n                    // Redirect to ticket activation if needed\n                    if (this.data.ticket.status == \"new\")\n                        window.location.href =  TKTApi.getTicketViewUrl();\n                }\n            );\n        },\n\n        check_bookability: function(callback) {\n            if (!this.data.screening._id)\n                return new Error(\"No screening\");\n\n            TKTApi.checkBookability(this.data.screening._id, (err, status, rsp) => {\n                if (err)\n                    return false;\n\n                this.data.bookability = rsp;\n\n                if (this.data.bookability.ticket_logged_in) {\n                    $('.connect-panel', this.$container).addClass('d-none');\n                    $('.book-panel', this.$container).removeClass('d-none');\n                    $('.show-bookings-btn', this.$container).removeClass('d-none');\n\n                    if (this.data.bookability.ticket_can_book_screening) {\n                        $('.book-btn', this.$container).removeClass('d-none');\n                        $('.book-form-error', this.$container).addClass('d-none');\n                    } else {\n                        $('.book-btn', this.$container).addClass('d-none');\n                        const msg = this.data.bookability.screening_already_booked ?\n                            i18n.t(\"Vous ne pouvez pas réserver plus de place pour cette séance avec votre abonnement.\") :\n                            i18n.t(\"Vous ne pouvez pas réserver de place pour cette séance avec votre abonnement.\");\n                        $('.book-form-error', this.$container)\n                            .html(msg)\n                            .removeClass('d-none');\n                    }\n                } else {\n                    $('.connect-panel', this.$container).removeClass('d-none');\n                    $('.book-panel', this.$container).addClass('d-none');\n                }\n            });\n        },\n\n        build_form: function() {\n            this.$container.html(\"\");\n            this.$dates_form    = $('<div class=\"dates-form\"></div>').appendTo(this.$container);\n            this.$tickets_form  = $('<div class=\"tickets-form\"></div>').appendTo(this.$container);\n            this.$success_panel = $('<div class=\"success-panel d-none\"></div>').appendTo(this.$container);\n\n            this.build_dates_form();\n            this.build_success_panel();\n        },\n\n        build_dates_form: function() {\n            // render template\n            this.$dates_form.html(Template.render('tkt-booking-form-dates-tpl', {\n                screenings: this.data.screenings,\n            }));\n\n            // bind dates choices\n            $('.date-wrapper span.date').click((e) => {\n                const $date = $(e.target);\n                this.select_screening($date.data('screening_id'));\n            });\n\n            // Select first non full date\n            let to_select = this.selected_screening;\n            if (!to_select) {\n                let i = this.data.screenings.length - 1;\n                while (i >= 0) {\n                    if (this.data.screenings[i].seats.available > 0)\n                        to_select = this.data.screenings[i]._id;\n                    i--;\n                }\n            }\n            this.select_screening(to_select);\n        },\n\n        build_tickets_form: function() {\n            // render template\n            const ticket_view_url = TKTApi.getTicketViewUrl();\n            this.$tickets_form.html(Template.render('tkt-booking-form-pricings-tpl', {\n                screening: this.data.screening,\n                ticket_view_url\n            }));\n\n            // bind pricing fields\n            $('.pricing-input', this.$container).change((e) => {\n              const $input = $(e.target);\n              this.data.pricings[$input.data('pricing')] = parseInt($input.val());\n            });\n\n            // bind pass panel toggler\n            $('a.show-connect-panel-form', this.$container).click((e) => {\n                e.preventDefault();\n                $('.connect-panel-form').removeClass('d-none');\n            });\n\n            // bind pass fields\n            $('.pass-number-input,.pass-key-input', this.$container).change((e) => {\n              this.data.pass_infos = {\n                number: $('.pass-number-input', this.$container).val(),\n                key: $('.pass-key-input', this.$container).val()\n              };\n            });\n\n            // bind pass connect button\n            $('.connect-btn', this.$container).click(this.connect_pass.bind(this));\n\n            // bind book button\n            $('.book-btn').click(this.book.bind(this));\n\n            // bind add-to-cart button\n            $('.add-to-cart-btn').click((e) => {\n              this.process_add_to_cart();\n            });\n        },\n\n        build_success_panel: function() {\n            // render template\n            this.$success_panel.html(Template.render('tkt-booking-form-success-tpl', {\n                program_url: config.get('program_url'),\n                cart_url: config.get('cart_url')\n            }));\n        },\n\n        select_screening: function (screening_id) {\n            $('.date-wrapper .date').removeClass('active');\n            $('.date-wrapper .date[data-screening_id=\"' + screening_id + '\"]').addClass('active');\n\n            // reset data\n            this.reset_store_on_screening_change();\n\n            this.data.screening = _.find(this.data.screenings, (s) => s._id === screening_id );\n            this.build_tickets_form();\n\n            this.check_bookability();\n        },\n\n        getUrlParam(name) {\n            const url = window.location.href;\n            name = name.replace(/[\\[\\]]/g, '\\\\$&');\n            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n                results = regex.exec(url);\n            if (!results) return null;\n            if (!results[2]) return '';\n            return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return Form;\n});\n"]}