{"version":3,"sources":["app/Booking/Form.js"],"names":["e","a","define","initialized","config","Template","show_on_load","moment","selected_screening","attach","getUrlParam","Object","prototype","toString","call","Form","postal","subscribe","M","channel","$","s","t","preventDefault","push","_this","TKTApi","getScreeningsInfo","topic","callback","screening","check_bookability","c","va","_this2","init","_pf","init_store","unusedTokens","data","unusedInput","screenings","overflow","charsLeftOver","pass_infos","nullInput","invalidMonth","bookability","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","pricings","ticket","emit_cart_update","reset_store_on_screening_change","NaN","deinit","Array","this","length","chosen_pricings","cart","n","emit_connection_update","_isAMomentObject","o","_i","_f","_l","_strict","_tzm","_isUTC","_offset","Y","_locale","d","publish","p","book","Date","process_add_to_cart","getTime","isValid","_d","l","updateOffset","Math","floor","g","addToCart","err","isFinite","T","r","number","_this5","checkBookability","deprecationHandler","Error","arguments","_this6","ticket_logged_in","$container","slice","w","_this4","addClass","join","stack","apply","v","connect_pass","H","build_dates_form","_this7","$dates_form","to_select","i","L","h","build_tickets_form","location","getTicketViewUrl","ticket_view_url","suppressDeprecationWarnings","_this8","$input","O","x","toLowerCase","W","E","F","$tickets_form","pow","max","appendTo","z","name","J","N","R","I","regex","results","decodeURIComponent","select_screening","$date","C","match","_id","replace","localeData","invalidDate","G","longDateFormat","lastIndex","target","test","U","Z","B","q","Q","X","ee","ae","te","se","ne","de","re","_e","ie","ue","build_success_panel","$success_panel","get","m","cart_url","le","_w","he","_","Le","ce","Ye","ye","fe","ke","pe","De","Te","ge","url","window","href","detach","year","RegExp","me"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Show a booking form\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"Booking/Form\"\n *    data-ids=\"12345678-1234-1234-1234-123456789012,...\"\n * >\n */\ndefine( [\n        'config', 'postal', 'lodash',\n        'template', 'jquery', 'api',\n        'moment', 'Cart', 'Screening', 'Ticket'\n    ], function dependencies(\n        config, postal, _,\n        Template, $, TKTApi,\n        moment, CartModel, Screening, Ticket) {\n\n    function Form($container, state) {\n        this.$container  = $container;\n        this.initialized = false;\n\n        this.ids                = this.$container.data('ids').split(',');\n        this.show_on_load       = parseInt(this.getUrlParam('book')) == 1;\n        this.selected_screening = this.getUrlParam('s_id');\n    }\n\n    Form.prototype = {\n        attach: function() {\n            this.init_store();\n\n            $('.show-booking-form').click((e) => {\n                e.preventDefault();\n\n                if (this.initialized)\n                    return this.deinit();\n\n                this.init();\n            });\n\n            postal.subscribe({\n                channel: \"connection\",\n                topic: \"update\",\n                callback: (data, envelope) => {\n                    this.check_bookability();\n                }\n            });\n\n            if (this.show_on_load)\n                this.init();\n        },\n\n        init: function() {\n            TKTApi.getScreeningsInfo(this.ids, (err, status, rsp) => {\n                this.data.screenings = rsp.map((s) => {\n                    let screening = new Screening(s);\n                    screening.eligible_types = s.eligible_types;\n\n                    return screening;\n                });\n                this.data.screenings = _.sortBy(this.data.screenings, (s) => s.start_at);\n                this.build_form();\n                this.initialized = true;\n            });\n        },\n\n        init_store: function() {\n            this.data = {\n                screenings: [], // current screenings\n                screening: {},  // selected screening\n                pricings: [],   // selected screening pricings\n                pass_infos: {}, // connection infos\n                ticket: {},     // active ticket\n                bookability: {} //selected screening bookability with  active ticket\n            };\n        },\n\n        reset_store_on_screening_change: function() {\n            this.data.screening   = {};\n            this.data.pricings    = {};\n            this.data.pass_infos  = {};\n            this.data.bookability = {};\n        },\n\n        deinit: function() {\n            this.$container.html(\"\");\n            this.initialized = false;\n        },\n\n        emit_cart_update: function(cart) {\n            postal.publish({\n                channel: \"cart\",\n                topic: \"update\",\n                data: {\n                    cart: cart\n                }\n            });\n        },\n\n        emit_connection_update: function(ticket) {\n            postal.publish({\n                channel: \"connection\",\n                topic: \"update\",\n                data: {\n                    ticket: ticket\n                }\n            });\n        },\n\n        process_add_to_cart: function() {\n            $('.pricings-error').html(\"\").addClass('d-none');\n\n            // Check chosen pricings\n            const chosen_pricings = _.find(this.data.pricings, (nb) => nb > 0);\n            if (!chosen_pricings) {\n                return $('.pricings-error')\n                    .html('Veuillez choisir au moins un billet')\n                    .removeClass('d-none');\n            }\n\n            // Add to cart\n            TKTApi.addToCart(\n                this.data.screening._id,\n                this.data.pricings,\n                (err, status, rsp) => {\n                    if (err) {\n                        return $('.pricings-error')\n                            .html(rsp.errorMsg)\n                            .removeClass('d-none');\n                    }\n\n                // Hide forms and show success message\n                $('.dates-form, .tickets-form').addClass('d-none');\n                $('.success-panel').removeClass('d-none');\n\n                // Reload and emit cart update\n                TKTApi.loadCart((err, status, rsp) => {\n                    if (err)\n                        return;\n\n                    this.emit_cart_update(new CartModel(rsp));\n                });\n            });\n        },\n\n        book: function() {\n            if (!this.data.screening._id)\n                return new Error(\"No screening\");\n\n            TKTApi.book(this.data.screening._id, (err, status, rsp) => {\n                if (err) {\n                    $('.book-form-success', this.$container).addClass('d-none');\n                    $('.book-form-error', this.$container)\n                        .html(\"Une erreur est survenue. Veuillez ré-essayer ultérieurement.\")\n                        .removeClass('d-none');\n                } else if (rsp.flash && rsp.flash.error) {\n                    $('.book-form-success', this.$container).addClass('d-none');\n                    $('.book-form-error', this.$container)\n                        .html(rsp.flash.error)\n                        .removeClass('d-none');\n                } else {\n                    $('.book-form-error', this.$container).addClass('d-none');\n                    $('.book-form-success', this.$container)\n                        .html(rsp.flash.success)\n                        .removeClass('d-none');\n                }\n\n                this.check_bookability();\n            });\n        },\n\n        connect_pass: function() {\n            $('.pass-error', this.$container).html(\"\").addClass('d-none');\n\n            if (!this.data.pass_infos.number || !this.data.pass_infos.key)\n                return $('.pass-error')\n                    .html('Veuillez remplir les deux champs')\n                    .removeClass('d-none');\n\n            TKTApi.loginTicket(\n                this.data.pass_infos.number,\n                this.data.pass_infos.key,\n                (err, status, rsp) => {\n                    if (err)\n                        return $('.pass-error')\n                            .html('Les informations que vous avez saisies sont invalides')\n                            .removeClass('d-none');\n\n                    this.data.ticket = new Ticket(rsp);\n                    this.emit_connection_update(this.data.ticket);\n\n                    // Redirect to ticket activation if needed\n                    if (this.data.ticket.status == \"new\")\n                        window.location.href =  TKTApi.getTicketViewUrl();\n                }\n            );\n        },\n\n        check_bookability: function(callback) {\n            if (!this.data.screening._id)\n                return new Error(\"No screening\");\n\n            TKTApi.checkBookability(this.data.screening._id, (err, status, rsp) => {\n                if (err)\n                    return false;\n\n                this.data.bookability = rsp;\n\n                if (this.data.bookability.ticket_logged_in) {\n                    $('.connect-panel', this.$container).addClass('d-none');\n                    $('.book-panel', this.$container).removeClass('d-none');\n                    $('.show-bookings-btn', this.$container).removeClass('d-none');\n\n                    if (this.data.bookability.ticket_can_book_screening) {\n                        $('.book-btn', this.$container).removeClass('d-none');\n                        $('.book-form-error', this.$container).addClass('d-none');\n                    } else {\n                        $('.book-btn', this.$container).addClass('d-none');\n                        const msg = this.data.bookability.screening_already_booked ?\n                            \"Vous ne pouvez pas réserver plus de place pour cette séance avec votre abonnement.\" :\n                            \"Vous ne pouvez pas réserver de place pour cette séance avec votre abonnement.\";\n                        $('.book-form-error', this.$container)\n                            .html(msg)\n                            .removeClass('d-none');\n                    }\n                } else {\n                    $('.connect-panel', this.$container).removeClass('d-none');\n                    $('.book-panel', this.$container).addClass('d-none');\n                }\n            });\n        },\n\n        build_form: function() {\n            this.$container.html(\"\");\n            this.$dates_form    = $('<div class=\"dates-form\"></div>').appendTo(this.$container);\n            this.$tickets_form  = $('<div class=\"tickets-form\"></div>').appendTo(this.$container);\n            this.$success_panel = $('<div class=\"success-panel d-none\"></div>').appendTo(this.$container);\n\n            this.build_dates_form();\n            this.build_success_panel();\n        },\n\n        build_dates_form: function() {\n            // render template\n            this.$dates_form.html(Template.render('tkt-booking-form-dates-tpl', {\n                screenings: this.data.screenings,\n            }));\n\n            // bind dates choices\n            $('.date-wrapper span.date').click((e) => {\n                const $date = $(e.target);\n                this.select_screening($date.data('screening_id'));\n            });\n\n            // Select first non full date\n            let to_select = this.selected_screening;\n            if (!to_select) {\n                let i = this.data.screenings.length - 1;\n                while (i >= 0) {\n                    if (this.data.screenings[i].seats.available > 0)\n                        to_select = this.data.screenings[i]._id;\n                    i--;\n                }\n            }\n            this.select_screening(to_select);\n        },\n\n        build_tickets_form: function() {\n            // render template\n            const ticket_view_url = TKTApi.getTicketViewUrl();\n            this.$tickets_form.html(Template.render('tkt-booking-form-pricings-tpl', {\n                screening: this.data.screening,\n                ticket_view_url\n            }));\n\n            // bind pricing fields\n            $('.pricing-input', this.$container).change((e) => {\n              const $input = $(e.target);\n              this.data.pricings[$input.data('pricing')] = parseInt($input.val());\n            });\n\n            // bind pass panel toggler\n            $('a.show-connect-panel-form', this.$container).click((e) => {\n                e.preventDefault();\n                $('.connect-panel-form').removeClass('d-none');\n            });\n\n            // bind pass fields\n            $('.pass-number-input,.pass-key-input', this.$container).change((e) => {\n              this.data.pass_infos = {\n                number: $('.pass-number-input', this.$container).val(),\n                key: $('.pass-key-input', this.$container).val()\n              };\n            });\n\n            // bind pass connect button\n            $('.connect-btn', this.$container).click(this.connect_pass.bind(this));\n\n            // bind book button\n            $('.book-btn').click(this.book.bind(this));\n\n            // bind add-to-cart button\n            $('.add-to-cart-btn').click((e) => {\n              this.process_add_to_cart();\n            });\n        },\n\n        build_success_panel: function() {\n            // render template\n            this.$success_panel.html(Template.render('tkt-booking-form-success-tpl', {\n                program_url: config.get('program_url'),\n                cart_url: config.get('cart_url')\n            }));\n        },\n\n        select_screening: function (screening_id) {\n            $('.date-wrapper .date').removeClass('active');\n            $('.date-wrapper .date[data-screening_id=\"' + screening_id + '\"]').addClass('active');\n\n            // reset data\n            this.reset_store_on_screening_change();\n\n            this.data.screening = _.find(this.data.screenings, (s) => s._id === screening_id );\n            this.build_tickets_form();\n\n            this.check_bookability();\n        },\n\n        getUrlParam(name) {\n            const url = window.location.href;\n            name = name.replace(/[\\[\\]]/g, '\\\\$&');\n            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n                results = regex.exec(url);\n            if (!results) return null;\n            if (!results[2]) return '';\n            return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return Form;\n});\n"]}