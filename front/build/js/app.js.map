{"version":3,"sources":["app/People/Filter.js"],"names":["define","dependencies","$","_","URI","matchsorter","Filter","$container","state","$person","$filters_country","$filters_company","$filters_profession","$filters_tags","prototype","attach","init","_this","filters","country","undefined","company","profession","map","filter","on","e","preventDefault","$link","target","href","attr","set_filter_value","run","debounce","value","clean_filter_value","sync_dom_with_state_filters","sync_url_with_state_filters","_this2","removeClass","filter_value","$active_link","addClass","val","_this3","new_url","window","location","removeQuery","setQuery","history","pushState","toString","sync_state_with_url","url","query","parseQuery","defaults","sync_total_by_filter_value","_this4","parent","i","link","shown_person","length","html","hide","fadeIn","handle_filters","replace","_this5","not","ms","default","person","match","data","threshold","rankings","CONTAINS","detach"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * People filters\n *\n * Usage:\n *\n * <div\n *     <!-- Required -->\n *     data-component=\"People/Filters\"\n * >\n */\ndefine(\n    ['jquery', 'lodash', 'urijs', 'matchsorter'],\n    function dependencies($, _, URI, matchsorter) {\n        function Filter($container, state) {\n            this.$container = $container;\n\n            this.state = {};\n\n            this.$person = $('.tkt-person', this.$container);\n\n            this.$filters_country    = $('ul li a.tkt-filter-country', this.$container);\n            this.$filters_company    = $('ul li a.tkt-filter-company', this.$container);\n            this.$filters_profession = $('ul li a.tkt-filter-profession', this.$container);\n            this.$filters_tags       = $('input.tkt-filter-tags', this.$container);\n        };\n\n        Filter.prototype = {\n            attach: function() {\n                this.init();\n            },\n\n            init: function() {\n                this.state = {\n                    filters: {\n                        country: undefined,\n                        company: undefined,\n                        profession: undefined\n                    }\n                };\n\n                ['country', 'company', 'profession'].map(filter => {\n                    this['$filters_'+filter].on('click', e => {\n                        e.preventDefault();\n\n                        const $link = $(e.target);\n                        const href  = $link.attr('href');\n\n                        this.set_filter_value(filter, $link.attr('href'))\n                        this.run();\n                    });\n                });\n\n                ['tags'].map(filter => {\n                    this['$filters_'+filter].on('input', _.debounce(e => {\n                        this.set_filter_value(filter, e.target.value);\n                        this.run();\n                    }, 250));\n                });\n\n                this.run();\n            },\n\n            set_filter_value: function (filter, value) {\n                this.state.filters[filter] = this.clean_filter_value(value);\n\n                this.sync_dom_with_state_filters();\n                this.sync_url_with_state_filters();\n            },\n\n            // Update the UI\n            sync_dom_with_state_filters: function () {\n                ['country', 'company', 'profession'].map(filter => {\n                    this['$filters_' + filter].removeClass('active');\n\n                    const filter_value = this.state.filters[filter];\n                    if (filter_value) {\n                        const $active_link = $('a[href=\"#' + filter_value + '\"]', this.$container);\n                        $active_link.addClass('active');\n                    }\n                });\n                ['tags'].map(filter => {\n                    const filter_value = this.state.filters[filter];\n\n                    if (filter_value) {\n                        this['$filters_' + filter].val(filter_value);\n                    }\n                });\n            },\n\n            // Update the url\n            sync_url_with_state_filters: function () {\n                const new_url = new URI(window.location.href);\n\n                ['country', 'company', 'profession', 'tags'].map(filter => {\n                    new_url.removeQuery(filter);\n                    if (this.state.filters[filter]) {\n                        new_url.setQuery(filter, this.state.filters[filter]);\n                    }\n                });\n                window.history.pushState(\"\", \"Title\", new_url.toString());\n            },\n\n            // Update the state depending on url\n            sync_state_with_url: function () {\n                const url   = new URI(window.location.href);\n                const query = URI.parseQuery(url.query());\n\n                this.state.filters = _.defaults(this.state.filters, query);\n            },\n\n            sync_total_by_filter_value: function () {\n                ['country', 'company', 'profession'].map(filter => {\n                    this['$filters_'+filter].parent('li:not(.reset-filter)').removeClass('to_show');\n                    this['$filters_'+filter].map((i, link) => {\n                        const filter_value = this.clean_filter_value($(link).attr('href'));\n                        const shown_person = this.$person.filter('[data-' + filter + '=\"' + filter_value + '\"].to_show').length;\n                        $('.tkt-filter-' + filter + '-total[data-' + filter + '=\"' + filter_value + '\"]').html(shown_person);\n\n                        if (shown_person > 0) {\n                            this['$filters_'+filter].filter('[href=\"#' + filter_value + '\"]').parent('li').addClass('to_show');\n                        }\n                    });\n\n                    this['$filters_'+filter].parent('li:not(.reset-filter)').hide();\n                    this['$filters_'+filter].parent('li.to_show').fadeIn();\n                });\n            },\n\n            run: function () {\n                this.sync_state_with_url();\n                this.sync_dom_with_state_filters();\n                this.handle_filters();\n                this.sync_total_by_filter_value();\n            },\n\n            clean_filter_value: function (value) {\n                if (!value) {\n                    return value;\n                }\n                return value.replace('#', '');\n            },\n\n            handle_filters: function () {\n                // Reset filters\n                this.$person.addClass('to_show');\n\n                ['country', 'company', 'profession'].map(filter => {\n                    if (this.state.filters[filter]) {\n                        const filter_value = this.state.filters[filter];\n                        this.$person.not('[data-' + filter + '=\"' + filter_value + '\"]').removeClass('to_show');\n                    }\n                });\n\n                const ms = matchsorter.default;\n                ['tags'].map(filter => {\n                    if (this.state.filters[filter]) {\n                        this.$person.map((i, person) => {\n                            const match = ms([$(person).data(filter)], this.state.filters[filter], {threshold: ms.rankings.CONTAINS});\n                            if (!match.length) {\n                                $(person).removeClass('to_show');\n                            }\n                        });\n                    }\n                });\n\n                this.$person.hide();\n                $('.to_show', this.$container).fadeIn();\n            },\n\n            detach: function() {\n\n            }\n        };\n\n        return Filter;\n    }\n);"]}