{"version":3,"sources":["app/Cart/Cart.js"],"names":["e","a","define","cart","config","async","Template","postal","CartModel","call","attach","Object","prototype","toString","Cart","m","init","subscribe","u","callback","M","t","s","push","channel","h","L","topic","load_cart","_this2","internal","c","unusedTokens","TKTApi","loadCart","overflow","charsLeftOver","emit_update","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","$container","meridiem","program_url","rfc2822","weekdayMismatch","_pf","y","build_table","_isValid","target","item_id","_this3","remove_item","empty","invalidWeekday","cart_reset_url","get","length","bigHour","isFrozen","validate_cart_url","bind_remove_item_icons","$","removeFromCart","data","n","Array","err","some","this","reset_cart","preventDefault","d","l","momentProperties","results","o","_isAMomentObject","_i","_f","_l","_strict","_tzm","_isUTC","_offset","Y","_locale","p","k","_d","getTime","NaN","isValid","Date","updateOffset","D","_this4","Math","floor","g","publish","T","r","min","abs","w","detach","suppressDeprecationWarnings","console","warn"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Show a debug bar for the Reader\n *\n * Usage:\n *\n * <div\n *    <!-- Required -->\n *    data-component=\"Cart/Cart\"\n * >\n */\ndefine(\n    ['config', 'async', 'jquery', 'api', 'template', 'postal', 'Cart'],\n    function dependencies(config, async, $, TKTApi, Template, postal, CartModel) {\n\n    function Cart($container, state) {\n        this.$container = $container;\n        this.cart       = {};\n    }\n\n    Cart.prototype = {\n        attach: function() {\n            this.init();\n        },\n\n        init: function() {\n            this.load_cart((err) => {\n                // FIXME: handle error\n                if (err)\n                    return;\n            });\n            postal.subscribe({\n                channel: \"cart\",\n                topic: \"reload\",\n                callback: (data, envelope) => {\n                    this.load_cart();\n                }\n            });\n            postal.subscribe({\n                channel: \"cart\",\n                topic: \"update\",\n                callback: (data, envelope) => {\n                    if (!data.internal)\n                        this.load_cart();\n                }\n            });\n        },\n\n        load_cart: function(callback) {\n            callback = callback || ((err) => {});\n\n            TKTApi.loadCart((err, status, rsp) => {\n                if (err)\n                    return callback(err);\n\n                this.cart = new CartModel(rsp);\n                this.cart.loadItemsInfos((err) => {\n                    if (err)\n                        return callback(err);\n\n                    this.build_table();\n                    this.emit_update();\n\n                    this.bind_remove_item_icons((err) => {\n                        return callback(err);\n                    });\n                });\n            });\n        },\n\n        build_table: function() {\n            this.$container.html(Template.render('tkt-cart-table-tpl', {\n                cart: this.cart,\n                program_url: config.get('program_url'),\n                cart_reset_url: config.get('cart_reset_url'),\n                validate_cart_url: this.cart.validate_cart_url + '?PHPSESSID=' + TKTApi.session_id\n            }));\n        },\n\n        bind_remove_item_icons: function(callback) {\n            $('.tkt-remove-cart-item').on('click', (e) => {\n                const $x      = $(e.target);\n                const item_id = parseInt($x.data('item'));\n\n                this.remove_item(item_id, (err) => {\n                    if (err)\n                        return callback(err);\n\n                    return this.load_cart(callback);\n                });\n            });\n\n            $('.tkt-reset-cart-btn').on('click', this.reset_cart.bind(this));\n        },\n\n        remove_item: function(item_id, callback) {\n            TKTApi.removeFromCart(item_id, (err, status, rsp) => {\n                return callback(err);\n            });\n        },\n\n        reset_cart: function(e) {\n            e.preventDefault();\n\n            const tasks = _.map($('.tkt-remove-cart-item'), (x) => {\n                return (done) => {\n                    let item_id = parseInt($(x).data('item'));\n                    this.remove_item(item_id, done);\n                };\n            });\n\n            async.parallel(tasks, (err, results) => {\n                return this.load_cart();\n            });\n        },\n\n        emit_update: function() {\n            postal.publish({\n                channel: \"cart\",\n                topic: \"update\",\n                data: {\n                    cart: this.cart,\n                    internal: true\n                }\n            });\n        },\n\n        detach: function() {\n\n        }\n    };\n\n    return Cart;\n});\n\n"]}